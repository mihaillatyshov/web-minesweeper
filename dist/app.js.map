{"version":3,"file":"app.js","mappings":"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","sources":["webpack:///./src/styles.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/nonce","webpack:///./src/GameWidnow.ts","webpack:///./src/Game/Constants.ts","webpack:///./src/FieldSerializer.ts","webpack:///./src/WebGpu/WebGpuInstance.ts","webpack:///./src/Game/IField.ts","webpack:///./src/WebGpu/WebGpuBuffer.ts","webpack:///./src/WebGpu/Matrices.ts","webpack:///./src/WebGpu/WebGpuTexture.ts","webpack:///./src/Theme.ts","webpack:///./src/Game/IUi.ts","webpack:///./src/WebGpu/WebGpuUi.ts","webpack:///./src/HtmlCanvas/HtmlCanvasInstance.ts","webpack:///./src/HtmlCanvas/HtmlCanvasTexture.ts","webpack:///./src/styles.css?44b2","webpack:///./src/index.ts","webpack:///./src/WebGpu/WebGpuField.ts","webpack:///./src/HtmlCanvas/HtmlCanvasField.ts","webpack:///./src/HtmlCanvas/HtmlCanvasUi.ts","webpack:///./src/Game/GameLogic.ts","webpack:///./src/Game/Utils.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"* {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n:root {\\r\\n    --font-color: #333;\\r\\n    --bg-color: #f8f9fa;\\r\\n}\\r\\n\\r\\n[data-theme=\\\"dark\\\"] {\\r\\n    --font-color: #fff;\\r\\n    --bg-color: #343a40;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    padding: 16px;\\r\\n    height: 100vh;\\r\\n    height: 100dvh;\\r\\n    text-align: center;\\r\\n    color: var(--font-color);\\r\\n    background-color: var(--bg-color);\\r\\n}\\r\\n\\r\\n#theme-switch {\\r\\n    position: absolute;\\r\\n    top: 16px;\\r\\n    right: 16px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#checkbox-theme {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n#nav {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-bottom: 16px;\\r\\n    gap: 12px;\\r\\n}\\r\\n\\r\\n#app {\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.form-field {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.nav-inputs {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 16px;\\r\\n    align-items: end;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    padding: 8px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"submit\\\"] {\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"submit\\\"]:hover {\\r\\n    background-color: #0056b3;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"] {\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"]:hover {\\r\\n    background-color: #0056b3;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"]:disabled {\\r\\n    background-color: #9cccff;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.text-danger {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n#error-message {\\r\\n    font-size: 24px;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,wBAAwB;IACxB,iCAAiC;AACrC;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,eAAe;IACf,SAAS;IACT,gBAAgB;IAChB,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,eAAe;AACnB\",\"sourcesContent\":[\"* {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n:root {\\r\\n    --font-color: #333;\\r\\n    --bg-color: #f8f9fa;\\r\\n}\\r\\n\\r\\n[data-theme=\\\"dark\\\"] {\\r\\n    --font-color: #fff;\\r\\n    --bg-color: #343a40;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    padding: 16px;\\r\\n    height: 100vh;\\r\\n    height: 100dvh;\\r\\n    text-align: center;\\r\\n    color: var(--font-color);\\r\\n    background-color: var(--bg-color);\\r\\n}\\r\\n\\r\\n#theme-switch {\\r\\n    position: absolute;\\r\\n    top: 16px;\\r\\n    right: 16px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#checkbox-theme {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n#nav {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-bottom: 16px;\\r\\n    gap: 12px;\\r\\n}\\r\\n\\r\\n#app {\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.form-field {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.nav-inputs {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 16px;\\r\\n    align-items: end;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    padding: 8px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"submit\\\"] {\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"submit\\\"]:hover {\\r\\n    background-color: #0056b3;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"] {\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"]:hover {\\r\\n    background-color: #0056b3;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"]:disabled {\\r\\n    background-color: #9cccff;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.text-danger {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n#error-message {\\r\\n    font-size: 24px;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nc = undefined;","type TMouseButtonEventFunc = (button: number) => void;\r\ntype TWheelEventFunc = (x: number, y: number) => void;\r\n\r\nexport class GameWindow {\r\n    private canvas: HTMLCanvasElement;\r\n    private mouseButtonsPressed: Set<number> = new Set();\r\n    private mousePosition: [number, number] = [0, 0];\r\n    private onMouseButtonDown: TMouseButtonEventFunc | undefined;\r\n    private onMouseButtonUp: TMouseButtonEventFunc | undefined;\r\n    private onWheel: TWheelEventFunc | undefined;\r\n\r\n    constructor(\r\n        canvas: HTMLCanvasElement,\r\n        onMouseButtonDown?: TMouseButtonEventFunc,\r\n        onMouseButtonUp?: TMouseButtonEventFunc,\r\n        onWheel?: TWheelEventFunc\r\n    ) {\r\n        this.canvas = canvas;\r\n\r\n        this.onMouseButtonDown = onMouseButtonDown;\r\n        this.onMouseButtonUp = onMouseButtonUp;\r\n        this.onWheel = onWheel;\r\n\r\n        window.addEventListener(\"mousedown\", (e) => {\r\n            this.mouseButtonsPressed.add(e.button);\r\n            this.onMouseButtonDown && this.onMouseButtonDown(e.button);\r\n        });\r\n\r\n        window.addEventListener(\"mouseup\", (e) => {\r\n            this.mouseButtonsPressed.delete(e.button);\r\n            this.onMouseButtonUp && this.onMouseButtonUp(e.button);\r\n        });\r\n\r\n        window.addEventListener(\"mousemove\", (e) => {\r\n            this.mousePosition = [e.clientX, e.clientY];\r\n        });\r\n\r\n        window.addEventListener(\"contextmenu\", (e) => {\r\n            e.preventDefault();\r\n        });\r\n        canvas.addEventListener(\"wheel\", (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            const x = e.shiftKey ? -e.deltaY : -e.deltaX;\r\n            const y = e.shiftKey ? e.deltaX : e.deltaY;\r\n            this.onWheel && this.onWheel(x, y);\r\n        });\r\n    }\r\n\r\n    setOnMouseButtonDown(func: TMouseButtonEventFunc) {\r\n        this.onMouseButtonDown = func;\r\n    }\r\n\r\n    setOnMouseButtonUp(func: TMouseButtonEventFunc) {\r\n        this.onMouseButtonUp = func;\r\n    }\r\n\r\n    setOnWheel(func: TWheelEventFunc) {\r\n        this.onWheel = func;\r\n    }\r\n\r\n    isMouseButtonPressed(button: number): boolean {\r\n        return this.mouseButtonsPressed.has(button);\r\n    }\r\n\r\n    getMousePosition() {\r\n        return {\r\n            x: this.mousePosition[0] - this.canvas.getBoundingClientRect().left,\r\n            y: this.canvas.getBoundingClientRect().bottom - this.mousePosition[1],\r\n        };\r\n    }\r\n\r\n    isMouseInside() {\r\n        const mousePos = this.getMousePosition();\r\n        return mousePos.x >= 0 && mousePos.y >= 0 && mousePos.x < this.canvas.width && mousePos.y < this.canvas.height;\r\n    }\r\n}\r\n","import { Vec2 } from \"Types\";\r\n\r\nexport const FIELD_CELL_SIZE = 32;\r\n\r\nexport const TEXT_SIZE: Vec2 = [42, 80];\r\n\r\nexport const BORDER_X = 24;\r\nexport const BORDER_Y = 22;\r\nexport const INFO_Y = 64;\r\nexport const TEXT_X = 82;\r\nexport const TEXT_Y = 50;\r\nexport const FACE_SIZE = 52;\r\n\r\nexport const TEXT_SYM_X = 22;\r\nexport const TEXT_SYM_Y = 42;\r\nexport const TEXT_SYM_SIZE: Vec2 = [TEXT_SYM_X, TEXT_SYM_Y];\r\nexport const TEXT_SYM_OFF_X = (TEXT_X - TEXT_SYM_X * 3) / 4;\r\nexport const TEXT_SYM_OFF_Y = (TEXT_Y - TEXT_SYM_Y) / 2;\r\n\r\nexport const TEXT_PAD = (INFO_Y - TEXT_Y) / 2;\r\n\r\nexport const SCROLL_POINT_X = 12;\r\nexport const SCROLL_POINT_Y = 32;\r\n\r\nexport const CAMERA_OFFSET_X = BORDER_X;\r\nexport const CAMERA_OFFSET_Y = BORDER_Y;\r\n\r\nexport const TEXTURE_SIZE = 512;\r\n","import { GameLogic } from \"Game/GameLogic\";\r\n\r\nlet loadData: any = null;\r\n\r\nexport const getStartupInputs = () => {\r\n    const params = new URLSearchParams(window.location.search);\r\n\r\n    const cols = parseInt(params.get(\"cols\") || \"9\");\r\n    const rows = parseInt(params.get(\"rows\") || \"9\");\r\n    const mines = parseInt(params.get(\"mines\") || \"10\");\r\n    const load = params.get(\"load\");\r\n\r\n    return { cols, rows, mines, load };\r\n};\r\n\r\nexport const startNewGame = (cols: number | string, rows: number | string, mines: number | string) => {\r\n    window.location.href = `?cols=${cols}&rows=${rows}&mines=${mines}`;\r\n};\r\n\r\nexport class GameDataBase {\r\n    private db: IDBDatabase | null = null;\r\n\r\n    constructor(onDBReady: () => void, onDBError: () => void) {\r\n        const openRequest = window.indexedDB.open(\"minesweeper\", 1);\r\n\r\n        openRequest.onsuccess = () => {\r\n            this.db = openRequest.result;\r\n            onDBReady();\r\n        };\r\n\r\n        openRequest.onerror = () => {\r\n            onDBError();\r\n        };\r\n\r\n        openRequest.onupgradeneeded = () => {\r\n            this.db = openRequest.result;\r\n            this.db.createObjectStore(\"games\", { keyPath: \"id\" });\r\n        };\r\n    }\r\n\r\n    saveGame(gameLogic: GameLogic) {\r\n        const data = gameLogic.save();\r\n        const tx = this.db?.transaction(\"games\", \"readwrite\");\r\n        const store = tx?.objectStore(\"games\");\r\n        store?.put({ id: 1, data });\r\n    }\r\n\r\n    loadGame(gameLogic: GameLogic, onLoadSuccess: () => void, onLoadError: () => void) {\r\n        const tx = this.db?.transaction(\"games\", \"readonly\");\r\n        const store = tx?.objectStore(\"games\");\r\n        const request = store?.get(1);\r\n        if (!request) {\r\n            console.error(\"Error loading game\");\r\n            return undefined;\r\n        }\r\n        request.onsuccess = () => {\r\n            console.log(request);\r\n            if (!request.result) {\r\n                onLoadError();\r\n                return;\r\n            }\r\n            gameLogic.load(request.result.data);\r\n            onLoadSuccess();\r\n        };\r\n        request.onerror = () => {\r\n            // TODO: handle error\r\n        };\r\n    }\r\n}\r\n","import { IRendererInstance } from \"Game/IRendererInstance\";\r\n\r\nexport class WebGpuInstance implements IRendererInstance {\r\n    private adapter: GPUAdapter | null = null;\r\n    private device: GPUDevice | null = null;\r\n\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private context: GPUCanvasContext | null = null;\r\n\r\n    private currentFrameCommandEncoder: GPUCommandEncoder | null = null;\r\n    private currentFramePassEncoder: GPURenderPassEncoder | null = null;\r\n\r\n    constructor() {}\r\n\r\n    async init(canvas: HTMLCanvasElement) {\r\n        this.canvas = canvas;\r\n\r\n        try {\r\n            const instance = navigator.gpu;\r\n            if (!instance) {\r\n                throw new Error(\"WebGPU is not supported\");\r\n            }\r\n\r\n            this.adapter = await instance.requestAdapter();\r\n            if (!this.adapter) {\r\n                throw new Error(\"WebGPU no adapter found\");\r\n            }\r\n\r\n            this.device = await this.adapter.requestDevice();\r\n            if (!this.device) {\r\n                throw new Error(\"WebGPU no device found\");\r\n            }\r\n\r\n            const presentationFormat = navigator.gpu.getPreferredCanvasFormat();\r\n\r\n            this.context = this.canvas.getContext(\"webgpu\") as GPUCanvasContext;\r\n            const canvasConfig: GPUCanvasConfiguration = {\r\n                device: this.device,\r\n                format: presentationFormat,\r\n                alphaMode: \"premultiplied\",\r\n                usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,\r\n            };\r\n            this.context.configure(canvasConfig);\r\n\r\n            gWebGpuInstance = this;\r\n        } catch (e) {\r\n            console.error(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    private getColorTextureView(): GPUTextureView {\r\n        if (!this.context) {\r\n            throw new Error(\"WebGPU context not initialized\");\r\n        }\r\n        return this.context.getCurrentTexture().createView();\r\n    }\r\n\r\n    getDevice(): GPUDevice {\r\n        if (!this.device) {\r\n            throw new Error(\"WebGPU device not initialized\");\r\n        }\r\n        return this.device;\r\n    }\r\n\r\n    beginFrame() {\r\n        if (!this.device) {\r\n            throw new Error(\"WebGPU device not initialized\");\r\n        }\r\n\r\n        let colorAttachment: GPURenderPassColorAttachment = {\r\n            view: this.getColorTextureView(),\r\n            clearValue: { r: 0, g: 0, b: 0, a: 1 },\r\n            loadOp: \"clear\",\r\n            storeOp: \"store\",\r\n        };\r\n\r\n        const renderPassDesc: GPURenderPassDescriptor = {\r\n            colorAttachments: [colorAttachment],\r\n        };\r\n\r\n        this.currentFrameCommandEncoder = this.device.createCommandEncoder();\r\n\r\n        this.currentFramePassEncoder = this.currentFrameCommandEncoder.beginRenderPass(renderPassDesc);\r\n    }\r\n\r\n    endFrame() {\r\n        if (!this.device) {\r\n            throw new Error(\"WebGPU device not initialized\");\r\n        }\r\n        if (!this.currentFramePassEncoder || !this.currentFrameCommandEncoder) {\r\n            throw new Error(\"WebGPU beginFrame() was not called\");\r\n        }\r\n\r\n        this.currentFramePassEncoder.end();\r\n\r\n        this.device.queue.submit([this.currentFrameCommandEncoder.finish()]);\r\n    }\r\n\r\n    getPassEncoder(): GPURenderPassEncoder {\r\n        if (!this.currentFramePassEncoder) {\r\n            throw new Error(\"WebGPU beginFrame() was not called\");\r\n        }\r\n        return this.currentFramePassEncoder;\r\n    }\r\n}\r\n\r\nexport let gWebGpuInstance: WebGpuInstance | null = null;\r\n","import { GameWindow } from \"GameWidnow\";\r\n\r\nimport { GameLogic } from \"Game/GameLogic\";\r\nimport { BORDER_X, BORDER_Y, CAMERA_OFFSET_X, CAMERA_OFFSET_Y, FIELD_CELL_SIZE, INFO_Y } from \"Game/Constants\";\r\n\r\nconst DRAW_NOT_ALLIGNED_BIAS = 3;\r\n\r\nconst TEXTURE_FIELD_OPENED_ZERO = 0;\r\nconst TEXTURE_FIELD_CLOSED = 17;\r\nconst TEXTURE_FIELD_PRESSED = 18;\r\nconst TEXTURE_FIELD_MINE_MARKED = 19;\r\nconst TEXTURE_FIELD_MINE_MARKED_WRONG = 20;\r\nconst TEXTURE_FIELD_MINE = 21;\r\nconst TEXTURE_FIELD_MINE_WRONG = 22;\r\nconst TEXTURE_FIELD_EMPTY = 23;\r\n\r\nexport interface TFieldCameraState {\r\n    isOnRight: boolean;\r\n    isOnBottom: boolean;\r\n    isOnLeft: boolean;\r\n    isOnTop: boolean;\r\n}\r\n\r\nexport class GameField {\r\n    protected windowWidth: number = 0;\r\n    protected windowHeight: number = 0;\r\n\r\n    protected cameraPosition = { x: 0, y: 0 };\r\n\r\n    baseInit(width: number, height: number) {\r\n        this.windowWidth = width;\r\n        this.windowHeight = height;\r\n    }\r\n\r\n    private isScrollAllowed() {\r\n        return true;\r\n    }\r\n\r\n    calcCameraMaxLimits(gameLogic: GameLogic) {\r\n        return {\r\n            x: -(gameLogic.getFieldColSize() * FIELD_CELL_SIZE - (this.windowWidth - BORDER_X * 2)),\r\n            y: -(gameLogic.getFieldRowSize() * FIELD_CELL_SIZE - (this.windowHeight - BORDER_Y * 3 - INFO_Y)),\r\n        };\r\n    }\r\n\r\n    moveCamera(gameLogic: GameLogic, x: number, y: number) {\r\n        if (this.isScrollAllowed()) {\r\n            this.cameraPosition.x += x;\r\n            this.cameraPosition.y += y;\r\n        }\r\n\r\n        const { x: maxX, y: maxY } = this.calcCameraMaxLimits(gameLogic);\r\n\r\n        this.cameraPosition.x = Math.min(0, Math.max(maxX, this.cameraPosition.x));\r\n        this.cameraPosition.y = Math.min(0, Math.max(maxY, this.cameraPosition.y));\r\n    }\r\n\r\n    getHoveredCell(gameWindow: GameWindow) {\r\n        return {\r\n            col: Math.floor(\r\n                (gameWindow.getMousePosition().x - this.cameraPosition.x - CAMERA_OFFSET_X) / FIELD_CELL_SIZE\r\n            ),\r\n            row: Math.floor(\r\n                (gameWindow.getMousePosition().y - this.cameraPosition.y - CAMERA_OFFSET_Y) / FIELD_CELL_SIZE\r\n            ),\r\n        };\r\n    }\r\n\r\n    isMouseInside(gameWindow: GameWindow) {\r\n        const { x, y } = gameWindow.getMousePosition();\r\n        return (\r\n            gameWindow.isMouseInside() &&\r\n            x > BORDER_X &&\r\n            y > BORDER_Y &&\r\n            x < this.windowWidth - BORDER_X &&\r\n            y < this.windowHeight - BORDER_Y * 2 - INFO_Y\r\n        );\r\n    }\r\n\r\n    getFieldCameraState(gameLogic: GameLogic): TFieldCameraState {\r\n        const epsilon = 0.01;\r\n        const { x: maxX, y: maxY } = this.calcCameraMaxLimits(gameLogic);\r\n        return {\r\n            isOnBottom: Math.abs(this.cameraPosition.y) < epsilon,\r\n            isOnTop: Math.abs(this.cameraPosition.y - maxY) < epsilon,\r\n            isOnLeft: Math.abs(this.cameraPosition.x) < epsilon,\r\n            isOnRight: Math.abs(this.cameraPosition.x - maxX) < epsilon,\r\n        };\r\n    }\r\n\r\n    getMaxFieldRowAndColCount(width: number, height: number) {\r\n        return {\r\n            maxDrawColCount: Math.floor(width / FIELD_CELL_SIZE) + DRAW_NOT_ALLIGNED_BIAS,\r\n            maxDrawRowCount: Math.floor(height / FIELD_CELL_SIZE) + DRAW_NOT_ALLIGNED_BIAS,\r\n        };\r\n    }\r\n\r\n    getFieldTextureId = (gameLogic: GameLogic, col: number, row: number, isPressed: boolean): number => {\r\n        if (!gameLogic.isCellExists(col, row)) {\r\n            return TEXTURE_FIELD_EMPTY;\r\n        }\r\n\r\n        if (gameLogic.isGameOver()) {\r\n            if (gameLogic.isCellMarked(col, row) && !gameLogic.isCellHasMine(col, row)) {\r\n                return TEXTURE_FIELD_MINE_MARKED_WRONG;\r\n            }\r\n            if (gameLogic.isCellHasMine(col, row) && gameLogic.isCellOpened(col, row)) {\r\n                return TEXTURE_FIELD_MINE_WRONG;\r\n            }\r\n            if (gameLogic.isCellMarked(col, row)) {\r\n                return TEXTURE_FIELD_MINE_MARKED;\r\n            }\r\n            if (gameLogic.isCellHasMine(col, row)) {\r\n                return TEXTURE_FIELD_MINE;\r\n            }\r\n        } else if (gameLogic.isGameWin()) {\r\n            if (gameLogic.isCellHasMine(col, row)) {\r\n                return TEXTURE_FIELD_MINE_MARKED;\r\n            }\r\n        }\r\n\r\n        if (gameLogic.isCellMarked(col, row)) {\r\n            return TEXTURE_FIELD_MINE_MARKED;\r\n        }\r\n\r\n        if (isPressed && gameLogic.isCellClosed(col, row)) {\r\n            return TEXTURE_FIELD_PRESSED;\r\n        }\r\n\r\n        if (gameLogic.isCellOpened(col, row)) {\r\n            return TEXTURE_FIELD_OPENED_ZERO + gameLogic.getCellMinesCount(col, row);\r\n        }\r\n\r\n        return TEXTURE_FIELD_CLOSED;\r\n    };\r\n}\r\n\r\nexport interface IField extends GameField {\r\n    init(width: number, height: number): Promise<void>;\r\n    update(gameLogic: GameLogic, gameWindow: GameWindow): void;\r\n    draw(): void;\r\n}\r\n\r\nexport interface IFieldConstructor {\r\n    new (): IField;\r\n}\r\n","export const createWebGpuBufferWithData = <TData extends Float32ArrayConstructor | Uint32ArrayConstructor>(\r\n    device: GPUDevice,\r\n    inData: number[][] | number[],\r\n    dataType: TData,\r\n    usage: GPUBufferUsageFlags\r\n): GPUBuffer => {\r\n    const data = new dataType(inData.flat());\r\n    const bufferDescriptor: GPUBufferDescriptor = {\r\n        size: data.byteLength,\r\n        usage,\r\n        mappedAtCreation: true,\r\n    };\r\n    const buffer = device.createBuffer(bufferDescriptor);\r\n    new dataType(buffer.getMappedRange()).set(data);\r\n    buffer.unmap();\r\n    return buffer;\r\n};\r\n\r\nexport const createWebGpuBufferDynamic = <TData extends Float32ArrayConstructor | Uint32ArrayConstructor>(\r\n    device: GPUDevice,\r\n    size: number,\r\n    dataType: TData,\r\n    usage: GPUBufferUsageFlags\r\n): GPUBuffer => {\r\n    const bufferDescriptor: GPUBufferDescriptor = {\r\n        size: size * dataType.BYTES_PER_ELEMENT,\r\n        usage: usage | GPUBufferUsage.COPY_DST,\r\n    };\r\n    const buffer = device.createBuffer(bufferDescriptor);\r\n    return buffer;\r\n};\r\n","export const Float32ArrayConcat = (a: Float32Array, b: Float32Array): Float32Array => {\r\n    const result = new Float32Array(a.length + b.length);\r\n    result.set(a);\r\n    result.set(b, a.length);\r\n    return result;\r\n};\r\n\r\nexport const createOrthographicMatrix = (\r\n    left: number,\r\n    right: number,\r\n    bottom: number,\r\n    top: number,\r\n    near: number,\r\n    far: number\r\n): Float32Array => {\r\n    // prettier-ignore\r\n    return new Float32Array([\r\n        2 / (right - left)             , 0                              , 0                  , 0,\r\n        0                              , 2 / (top - bottom)             , 0                  , 0,\r\n        0                              , 0                              , 1 / (far - near)   , 0,\r\n        (left + right) / (left - right), (top + bottom) / (bottom - top), near / (near - far), 1,\r\n    ]);\r\n};\r\n\r\nexport const createTranslationMatrix = (x: number, y: number, z: number): Float32Array => {\r\n    // prettier-ignore\r\n    return new Float32Array([\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        x, y, z, 1,\r\n    ]);\r\n};\r\n","export const createWebGpuTexture = async (device: GPUDevice, filename: string): Promise<GPUTexture> => {\r\n    const response = await fetch(filename);\r\n    const imageBitmap = await createImageBitmap(await response.blob());\r\n\r\n    const texture = device.createTexture({\r\n        size: [imageBitmap.width, imageBitmap.height, 1],\r\n        format: \"rgba8unorm\",\r\n        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\r\n    });\r\n    device.queue.copyExternalImageToTexture({ source: imageBitmap }, { texture }, [\r\n        imageBitmap.width,\r\n        imageBitmap.height,\r\n    ]);\r\n\r\n    return texture;\r\n};\r\n","//determines if the user has a set theme\r\nexport const detectColorScheme = () => {\r\n    let theme = \"light\"; //default to light\r\n\r\n    //local storage is used to override OS theme settings\r\n    if (localStorage.getItem(\"theme\")) {\r\n        if (localStorage.getItem(\"theme\") == \"dark\") {\r\n            theme = \"dark\";\r\n        }\r\n    } else if (!window.matchMedia) {\r\n        //matchMedia method not supported\r\n        return false;\r\n    } else if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n        //OS theme setting detected as dark\r\n        theme = \"dark\";\r\n    }\r\n\r\n    //dark theme preferred, set document with a `data-theme` attribute\r\n    if (theme == \"dark\") {\r\n        document.documentElement.setAttribute(\"data-theme\", \"dark\");\r\n    }\r\n};\r\n\r\nexport const getTheme = () => {\r\n    return document.documentElement.getAttribute(\"data-theme\") || \"light\";\r\n};\r\n","import { GameWindow } from \"GameWidnow\";\r\n\r\nimport { GameLogic } from \"Game/GameLogic\";\r\nimport {\r\n    BORDER_X,\r\n    BORDER_Y,\r\n    FACE_SIZE,\r\n    INFO_Y,\r\n    SCROLL_POINT_X,\r\n    SCROLL_POINT_Y,\r\n    TEXT_PAD,\r\n    TEXT_SYM_OFF_X,\r\n    TEXT_SYM_OFF_Y,\r\n    TEXT_SYM_X,\r\n    TEXT_X,\r\n    TEXT_Y,\r\n} from \"Game/Constants\";\r\nimport { TFieldCameraState } from \"Game/IField\";\r\n\r\nimport { Vec2 } from \"Types\";\r\n\r\nconst TEXT_0: Vec2 = [128, 192] as const;\r\nconst TEXT_1: Vec2 = [170, 192] as const;\r\nconst TEXT_2: Vec2 = [212, 192] as const;\r\nconst TEXT_3: Vec2 = [254, 192] as const;\r\nconst TEXT_4: Vec2 = [296, 192] as const;\r\nconst TEXT_5: Vec2 = [338, 192] as const;\r\nconst TEXT_6: Vec2 = [380, 192] as const;\r\nconst TEXT_7: Vec2 = [422, 192] as const;\r\nconst TEXT_8: Vec2 = [464, 192] as const;\r\nconst TEXT_9: Vec2 = [0, 272] as const;\r\n\r\nexport const TEXT_ARRAY: Vec2[] = [\r\n    TEXT_0,\r\n    TEXT_1,\r\n    TEXT_2,\r\n    TEXT_3,\r\n    TEXT_4,\r\n    TEXT_5,\r\n    TEXT_6,\r\n    TEXT_7,\r\n    TEXT_8,\r\n    TEXT_9,\r\n] as const;\r\n\r\nexport class GameUi {\r\n    protected windowWidth: number = 0;\r\n    protected windowHeight: number = 0;\r\n\r\n    protected mouseOnFaceDown = false;\r\n\r\n    baseInit(width: number, height: number) {\r\n        this.windowWidth = width;\r\n        this.windowHeight = height;\r\n    }\r\n\r\n    isMouseInsideFace(gameWindow: GameWindow) {\r\n        const mousePos = gameWindow.getMousePosition();\r\n        const faceOffsetX = this.windowWidth / 2 - FACE_SIZE / 2;\r\n        const faceOffsetY = this.windowHeight - BORDER_Y - INFO_Y / 2 - FACE_SIZE / 2;\r\n\r\n        return (\r\n            mousePos.x >= faceOffsetX &&\r\n            mousePos.x <= faceOffsetX + FACE_SIZE &&\r\n            mousePos.y >= faceOffsetY &&\r\n            mousePos.y <= faceOffsetY + FACE_SIZE\r\n        );\r\n    }\r\n\r\n    checkFaceClickDown(gameWindow: GameWindow) {\r\n        this.mouseOnFaceDown = this.isMouseInsideFace(gameWindow);\r\n    }\r\n\r\n    checkFaceClickUp(gameLogic: GameLogic, gameWindow: GameWindow) {\r\n        if (this.mouseOnFaceDown && this.isMouseInsideFace(gameWindow)) {\r\n            gameLogic.generateField();\r\n        }\r\n        this.mouseOnFaceDown = false;\r\n    }\r\n}\r\n\r\nexport interface IUi extends GameUi {\r\n    init(width: number, height: number): Promise<void>;\r\n    update(gameLogic: GameLogic, fieldCameraState: TFieldCameraState, gameWindow: GameWindow): void;\r\n    draw(): void;\r\n}\r\n\r\nexport interface IUiConstructor {\r\n    new (): IUi;\r\n}\r\n\r\nexport interface TUiSpriteData {\r\n    spritePos: Vec2;\r\n    spriteSize: Vec2;\r\n    atlasPos: Vec2;\r\n    atlasSize: Vec2;\r\n}\r\n\r\nexport const createUiSpriteData = (\r\n    spritePos: Vec2,\r\n    spriteSize: Vec2,\r\n    atlasPos: Vec2,\r\n    atlasSize: Vec2\r\n): TUiSpriteData => ({\r\n    spritePos,\r\n    spriteSize,\r\n    atlasPos,\r\n    atlasSize,\r\n});\r\n\r\nconst textBlockOffsetY = (height: number) => height - BORDER_Y - INFO_Y / 2 - TEXT_Y / 2;\r\n\r\n/* prettier-ignore */ export const uiFrameBorderBotLeft     = (width: number, height: number) => createUiSpriteData([0                                   , 0                             ], [BORDER_X                , BORDER_Y             ], [162, 272], [BORDER_X, BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameBorderBotRight    = (width: number, height: number) => createUiSpriteData([width - BORDER_X                    , 0                             ], [BORDER_X                , BORDER_Y             ], [138, 272], [BORDER_X, BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameBorderTopLeft     = (width: number, height: number) => createUiSpriteData([0                                   , height - BORDER_Y             ], [BORDER_X                , BORDER_Y             ], [114, 272], [BORDER_X, BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameBorderTopRight    = (width: number, height: number) => createUiSpriteData([width - BORDER_X                    , height - BORDER_Y             ], [BORDER_X                , BORDER_Y             ], [90 , 272], [BORDER_X, BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameBorderBot         = (width: number, height: number) => createUiSpriteData([BORDER_X                            , 0                             ], [width - BORDER_X * 2    , BORDER_Y             ], [211, 272], [2       , BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameBorderTop         = (width: number, height: number) => createUiSpriteData([BORDER_X                            , height - BORDER_Y             ], [width - BORDER_X * 2    , BORDER_Y             ], [211, 272], [2       , BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameCenter            = (width: number, height: number) => createUiSpriteData([BORDER_X                            , height - BORDER_Y - INFO_Y    ], [width - BORDER_X * 2    , INFO_Y               ], [96 , 160], [1       , 1       ]);\r\n/* prettier-ignore */ export const uiFrameBorderLeft        = (width: number, height: number) => createUiSpriteData([0                                   , BORDER_Y                      ], [BORDER_X                , height - BORDER_Y * 2], [186, 273], [BORDER_X, 2       ]);\r\n/* prettier-ignore */ export const uiFrameBorderRight       = (width: number, height: number) => createUiSpriteData([width - BORDER_X                    , BORDER_Y                      ], [BORDER_X                , height - BORDER_Y * 2], [186, 273], [BORDER_X, 2       ]);\r\n/* prettier-ignore */ export const uiFrameBorderCenterLeft  = (width: number, height: number) => createUiSpriteData([0                                   , height - BORDER_Y * 2 - INFO_Y], [BORDER_X                , BORDER_Y             ], [66 , 272], [BORDER_X, BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameBorderCenterRight = (width: number, height: number) => createUiSpriteData([width - BORDER_X                    , height - BORDER_Y * 2 - INFO_Y], [BORDER_X                , BORDER_Y             ], [42 , 272], [BORDER_X, BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameBorderCenter      = (width: number, height: number) => createUiSpriteData([BORDER_X                            , height - BORDER_Y * 2 - INFO_Y], [width - BORDER_X * 2    , BORDER_Y             ], [211, 272], [2       , BORDER_Y]);\r\n/* prettier-ignore */ export const uiFrameInfoLeft          = (width: number, height: number) => createUiSpriteData([BORDER_X + TEXT_PAD                 , textBlockOffsetY(height)      ], [TEXT_X                  , TEXT_Y               ], [0  , 192], [128     , 80      ]);\r\n/* prettier-ignore */ export const uiFrameInfoRight         = (width: number, height: number) => createUiSpriteData([width - BORDER_X - TEXT_X - TEXT_PAD, textBlockOffsetY(height)      ], [TEXT_X                  , TEXT_Y               ], [0  , 192], [128     , 80      ]);\r\n\r\nconst scrollPointWidthCenter = (width: number) => width / 2 - SCROLL_POINT_Y / 2;\r\nconst scrollPointHeightCenter = (height: number) => (height - BORDER_Y - INFO_Y) / 2 - SCROLL_POINT_Y / 2;\r\n/* prettier-ignore */ export const uiScrollLeftUvPos : Vec2 = [422, 272];\r\n/* prettier-ignore */ export const uiScrollRightUvPos: Vec2 = [454, 272];\r\n/* prettier-ignore */ export const uiScrollTopUvPos  : Vec2 = [0  , 352];\r\n/* prettier-ignore */ export const uiScrollBotUvPos  : Vec2 = [64 , 352];\r\n/* prettier-ignore */ export const uiScrollXUvSize   : Vec2 = [32 , 64 ];\r\n/* prettier-ignore */ export const uiScrollYUvSize   : Vec2 = [64 , 32 ];\r\n/* prettier-ignore */ export const uiScrollPointLeft  = (width: number, height: number) => createUiSpriteData([BORDER_X                         , scrollPointHeightCenter(height)            ], [SCROLL_POINT_X, SCROLL_POINT_Y], uiScrollLeftUvPos , uiScrollXUvSize);\r\n/* prettier-ignore */ export const uiScrollPointRight = (width: number, height: number) => createUiSpriteData([width - BORDER_X - SCROLL_POINT_X, scrollPointHeightCenter(height)            ], [SCROLL_POINT_X, SCROLL_POINT_Y], uiScrollRightUvPos, uiScrollXUvSize);\r\n/* prettier-ignore */ export const uiScrollPointTop   = (width: number, height: number) => createUiSpriteData([scrollPointWidthCenter(width)    , height - BORDER_Y - INFO_Y - SCROLL_POINT_Y], [SCROLL_POINT_Y, SCROLL_POINT_X], uiScrollTopUvPos  , uiScrollYUvSize);\r\n/* prettier-ignore */ export const uiScrollPointBot   = (width: number, height: number) => createUiSpriteData([scrollPointWidthCenter(width)    , BORDER_Y                                   ], [SCROLL_POINT_Y, SCROLL_POINT_X], uiScrollBotUvPos  , uiScrollYUvSize);\r\n\r\n/* prettier-ignore */ export const uiFacePos = (width: number, height: number) => [width / 2 - FACE_SIZE / 2, height - BORDER_Y - INFO_Y / 2 - FACE_SIZE / 2] as Vec2;\r\n/* prettier-ignore */ export const uiFaceDefaultUvPos: Vec2 = [214, 272];\r\n/* prettier-ignore */ export const uiFaceWinUvPos    : Vec2 = [370, 272];\r\n/* prettier-ignore */ export const uiFaceLoseUvPos   : Vec2 = [318, 272];\r\n/* prettier-ignore */ export const uiFacePressUvPos  : Vec2 = [266, 272];\r\n\r\nconst textOffsetY = (height: number) => height - TEXT_Y - BORDER_Y - TEXT_PAD + TEXT_SYM_OFF_Y;\r\n/* prettier-ignore */ export const uiTextMinesPos0 = (width: number, height: number) => [BORDER_X + TEXT_PAD + TEXT_SYM_OFF_X + (TEXT_SYM_X + TEXT_SYM_OFF_X) * 0                 , textOffsetY(height)] as Vec2;\r\n/* prettier-ignore */ export const uiTextMinesPos1 = (width: number, height: number) => [BORDER_X + TEXT_PAD + TEXT_SYM_OFF_X + (TEXT_SYM_X + TEXT_SYM_OFF_X) * 1                 , textOffsetY(height)] as Vec2;\r\n/* prettier-ignore */ export const uiTextMinesPos2 = (width: number, height: number) => [BORDER_X + TEXT_PAD + TEXT_SYM_OFF_X + (TEXT_SYM_X + TEXT_SYM_OFF_X) * 2                 , textOffsetY(height)] as Vec2;\r\n/* prettier-ignore */ export const uiTextTimePos0  = (width: number, height: number) => [width - BORDER_X - TEXT_PAD - TEXT_X + TEXT_SYM_OFF_X + (TEXT_SYM_X + TEXT_SYM_OFF_X) * 0, textOffsetY(height)] as Vec2;\r\n/* prettier-ignore */ export const uiTextTimePos1  = (width: number, height: number) => [width - BORDER_X - TEXT_PAD - TEXT_X + TEXT_SYM_OFF_X + (TEXT_SYM_X + TEXT_SYM_OFF_X) * 1, textOffsetY(height)] as Vec2;\r\n/* prettier-ignore */ export const uiTextTimePos2  = (width: number, height: number) => [width - BORDER_X - TEXT_PAD - TEXT_X + TEXT_SYM_OFF_X + (TEXT_SYM_X + TEXT_SYM_OFF_X) * 2, textOffsetY(height)] as Vec2;\r\n\r\nexport const uiTextMinesPosArray = [uiTextMinesPos0, uiTextMinesPos1, uiTextMinesPos2] as const;\r\nexport const uiTextTimePosArray = [uiTextTimePos0, uiTextTimePos1, uiTextTimePos2] as const;\r\n","import { GameWindow } from \"GameWidnow\";\r\n\r\nimport { GameLogic } from \"Game/GameLogic\";\r\nimport { TFieldCameraState } from \"Game/IField\";\r\nimport {\r\n    createUiSpriteData,\r\n    GameUi,\r\n    IUi,\r\n    TEXT_ARRAY,\r\n    TUiSpriteData,\r\n    uiFrameBorderBot,\r\n    uiFrameBorderBotLeft,\r\n    uiFrameBorderBotRight,\r\n    uiFrameBorderTop,\r\n    uiFrameBorderTopLeft,\r\n    uiFrameBorderTopRight,\r\n    uiFrameCenter,\r\n    uiFrameBorderLeft,\r\n    uiFrameBorderRight,\r\n    uiFrameBorderCenterLeft,\r\n    uiFrameBorderCenterRight,\r\n    uiFrameBorderCenter,\r\n    uiFrameInfoLeft,\r\n    uiFrameInfoRight,\r\n    uiTextMinesPos0,\r\n    uiTextMinesPos1,\r\n    uiTextMinesPos2,\r\n    uiTextTimePos0,\r\n    uiTextTimePos1,\r\n    uiTextTimePos2,\r\n    uiFacePos,\r\n    uiScrollPointBot,\r\n    uiScrollPointTop,\r\n    uiScrollPointLeft,\r\n    uiScrollPointRight,\r\n    uiScrollYUvSize,\r\n    uiScrollXUvSize,\r\n    uiScrollBotUvPos,\r\n    uiScrollTopUvPos,\r\n    uiScrollRightUvPos,\r\n    uiScrollLeftUvPos,\r\n    uiFaceDefaultUvPos,\r\n    uiFaceWinUvPos,\r\n    uiFaceLoseUvPos,\r\n    uiFacePressUvPos,\r\n} from \"Game/IUi\";\r\nimport {\r\n    BORDER_Y,\r\n    BORDER_X,\r\n    FACE_SIZE,\r\n    INFO_Y,\r\n    TEXT_Y,\r\n    TEXT_SIZE,\r\n    TEXT_SYM_Y,\r\n    TEXT_SYM_OFF_X,\r\n    TEXT_SYM_OFF_Y,\r\n    TEXT_SYM_X,\r\n    TEXT_X,\r\n    SCROLL_POINT_Y,\r\n    SCROLL_POINT_X,\r\n    TEXTURE_SIZE,\r\n    TEXT_PAD,\r\n    TEXT_SYM_SIZE,\r\n} from \"Game/Constants\";\r\n\r\nimport { createWebGpuBufferDynamic, createWebGpuBufferWithData } from \"WebGpu/WebGpuBuffer\";\r\nimport { createWebGpuTexture } from \"WebGpu/WebGpuTexture\";\r\nimport { createOrthographicMatrix } from \"WebGpu/Matrices\";\r\nimport { gWebGpuInstance } from \"WebGpu/WebGpuInstance\";\r\n\r\nimport { Vec2 } from \"Types\";\r\nimport { getTheme } from \"Theme\";\r\n\r\nimport vertShaderCode from \"assets/shaders/ui.vert.wgsl\";\r\nimport fragShaderCode from \"assets/shaders/ui.frag.wgsl\";\r\n\r\ninterface TDrawData {\r\n    pipeline: GPURenderPipeline;\r\n    staticPositionBuffer: GPUBuffer;\r\n    staticTextureCoordBuffer: GPUBuffer;\r\n    staticIndicesBuffer: GPUBuffer;\r\n    dynamicPositionBuffer: GPUBuffer;\r\n    dynamicTextureCoordBuffer: GPUBuffer;\r\n    dynamicIndicesBuffer: GPUBuffer;\r\n    uiTextureUniformBindGroupDark: GPUBindGroup;\r\n    uiTextureUniformBindGroupLight: GPUBindGroup;\r\n    uiMatricesUniformBindGroup: GPUBindGroup;\r\n}\r\n\r\nconst getPos = (position: Vec2, size: Vec2) => {\r\n    const x = position[0];\r\n    const y = position[1];\r\n    const width = size[0];\r\n    const height = size[1];\r\n\r\n    return [\r\n        [x, y],\r\n        [x + width, y],\r\n        [x, y + height],\r\n        [x + width, y + height],\r\n    ];\r\n};\r\n\r\nconst getUV = (position: Vec2, size: Vec2) => {\r\n    const x = position[0] / TEXTURE_SIZE;\r\n    const y = position[1] / TEXTURE_SIZE;\r\n    const width = size[0] / TEXTURE_SIZE;\r\n    const height = size[1] / TEXTURE_SIZE;\r\n\r\n    return [\r\n        [x, y + height],\r\n        [x + width, y + height],\r\n        [x, y],\r\n        [x + width, y],\r\n    ];\r\n};\r\n\r\nconst genVBOs = (sprites: TUiSpriteData[]) => {\r\n    const positions: number[] = [];\r\n    const uvs: number[] = [];\r\n    const indices: number[] = [];\r\n\r\n    let index = 0;\r\n    for (const sprite of sprites) {\r\n        const pos = getPos(sprite.spritePos, sprite.spriteSize);\r\n        const uv = getUV(sprite.atlasPos, sprite.atlasSize);\r\n\r\n        positions.push(...pos.flat());\r\n        uvs.push(...uv.flat());\r\n\r\n        indices.push(index, index + 1, index + 2, index + 1, index + 2, index + 3);\r\n        index += 4;\r\n    }\r\n\r\n    return { positions, uvs, indices };\r\n};\r\n\r\nexport class WebGpuUi extends GameUi implements IUi {\r\n    private device: GPUDevice | null = null;\r\n\r\n    private drawData: TDrawData | null = null;\r\n\r\n    private staticIndicesCount = 0;\r\n    private dynamicIndicesCount = 0;\r\n\r\n    async init(width: number, height: number) {\r\n        if (!gWebGpuInstance) {\r\n            throw new Error(\"WebGpuInstance is not initialized\");\r\n        }\r\n\r\n        this.baseInit(width, height);\r\n\r\n        this.device = gWebGpuInstance.getDevice();\r\n\r\n        // prettier-ignore\r\n        const { positions: staticPositions, uvs: staticUVs, indices: staticIndices } = genVBOs([\r\n            uiFrameBorderBotLeft(width, height),\r\n            uiFrameBorderBotRight(width, height),\r\n            uiFrameBorderTopLeft(width, height),\r\n            uiFrameBorderTopRight(width, height),\r\n            uiFrameBorderBot(width, height),\r\n            uiFrameBorderTop(width, height),\r\n            uiFrameCenter(width, height),\r\n            uiFrameBorderLeft(width, height),\r\n            uiFrameBorderRight(width, height),\r\n            uiFrameBorderCenterLeft(width, height),\r\n            uiFrameBorderCenterRight(width, height),\r\n            uiFrameBorderCenter(width, height),\r\n            uiFrameInfoLeft(width, height),\r\n            uiFrameInfoRight(width, height),\r\n        ]);\r\n\r\n        const staticPositionBuffer = createWebGpuBufferWithData(\r\n            this.device,\r\n            staticPositions,\r\n            Float32Array,\r\n            GPUBufferUsage.VERTEX\r\n        );\r\n\r\n        const staticTextureCoordBuffer = createWebGpuBufferWithData(\r\n            this.device,\r\n            staticUVs,\r\n            Float32Array,\r\n            GPUBufferUsage.VERTEX\r\n        );\r\n\r\n        const staticIndicesBuffer = createWebGpuBufferWithData(\r\n            this.device,\r\n            staticIndices,\r\n            Uint32Array,\r\n            GPUBufferUsage.INDEX\r\n        );\r\n\r\n        this.staticIndicesCount = staticIndices.length;\r\n\r\n        const faceOffsetY = height - BORDER_Y - INFO_Y / 2 - FACE_SIZE / 2;\r\n\r\n        // prettier-ignore\r\n        const { positions: dynamicPositions, uvs: dynamicUVs, indices: dynamicIndices, } = genVBOs([\r\n            createUiSpriteData(uiTextMinesPos0(width, height), TEXT_SYM_SIZE         , [0, 0], [0,0]),\r\n            createUiSpriteData(uiTextMinesPos1(width, height), TEXT_SYM_SIZE         , [0, 0], [0,0]),\r\n            createUiSpriteData(uiTextMinesPos2(width, height), TEXT_SYM_SIZE         , [0, 0], [0,0]),\r\n            createUiSpriteData(uiTextTimePos0 (width, height), TEXT_SYM_SIZE         , [0, 0], [0,0]),\r\n            createUiSpriteData(uiTextTimePos1 (width, height), TEXT_SYM_SIZE         , [0, 0], [0,0]),\r\n            createUiSpriteData(uiTextTimePos2 (width, height), TEXT_SYM_SIZE         , [0, 0], [0,0]),\r\n            createUiSpriteData(uiFacePos      (width, height), [FACE_SIZE, FACE_SIZE], [0, 0], [0,0]),\r\n            uiScrollPointBot(width, height),\r\n            uiScrollPointTop(width, height),\r\n            uiScrollPointLeft(width, height),\r\n            uiScrollPointRight(width, height),\r\n        ]);\r\n\r\n        const dynamicPositionBuffer = createWebGpuBufferWithData(\r\n            this.device,\r\n            dynamicPositions,\r\n            Float32Array,\r\n            GPUBufferUsage.VERTEX\r\n        );\r\n\r\n        const dynamicTextureCoordBuffer = createWebGpuBufferDynamic(\r\n            this.device,\r\n            dynamicUVs.length * Float32Array.BYTES_PER_ELEMENT,\r\n            Float32Array,\r\n            GPUBufferUsage.VERTEX\r\n        );\r\n\r\n        const dynamicIndicesBuffer = createWebGpuBufferWithData(\r\n            this.device,\r\n            dynamicIndices,\r\n            Uint32Array,\r\n            GPUBufferUsage.INDEX\r\n        );\r\n\r\n        this.dynamicIndicesCount = dynamicIndices.length;\r\n\r\n        const vsmDesc = { code: vertShaderCode };\r\n        const vertModule = this.device.createShaderModule(vsmDesc);\r\n\r\n        const fsmDesc = { code: fragShaderCode };\r\n        const fragModule = this.device.createShaderModule(fsmDesc);\r\n\r\n        const positionAttribDesc: GPUVertexAttribute = {\r\n            shaderLocation: 0,\r\n            offset: 0,\r\n            format: \"float32x2\",\r\n        };\r\n        const positionBufferDesc: GPUVertexBufferLayout = {\r\n            attributes: [positionAttribDesc],\r\n            arrayStride: 4 * 2, // sizeof(float) * 2\r\n            stepMode: \"vertex\",\r\n        };\r\n\r\n        const textureCoordAttribDesc: GPUVertexAttribute = {\r\n            shaderLocation: 1,\r\n            offset: 0,\r\n            format: \"float32x2\",\r\n        };\r\n        const textureCoordBufferDesc: GPUVertexBufferLayout = {\r\n            attributes: [textureCoordAttribDesc],\r\n            arrayStride: 4 * 2, // sizeof(float) * 2\r\n            stepMode: \"vertex\",\r\n        };\r\n\r\n        const uiTextureBindGroupLayout: GPUBindGroupLayout = this.device.createBindGroupLayout({\r\n            entries: [\r\n                { binding: 0, visibility: GPUShaderStage.FRAGMENT, sampler: {} },\r\n                { binding: 1, visibility: GPUShaderStage.FRAGMENT, texture: {} },\r\n            ],\r\n        });\r\n\r\n        const uiMatricesBindGroupLayout: GPUBindGroupLayout = this.device.createBindGroupLayout({\r\n            entries: [{ binding: 0, visibility: GPUShaderStage.VERTEX, buffer: {} }],\r\n        });\r\n\r\n        const pipelineLayoutDesc: GPUPipelineLayoutDescriptor = {\r\n            bindGroupLayouts: [uiTextureBindGroupLayout, uiMatricesBindGroupLayout],\r\n        };\r\n        const pipelineLayout = this.device.createPipelineLayout(pipelineLayoutDesc);\r\n\r\n        const vertex: GPUVertexState = {\r\n            module: vertModule,\r\n            entryPoint: \"main\",\r\n            buffers: [positionBufferDesc, textureCoordBufferDesc],\r\n        };\r\n\r\n        const presentationFormat: GPUColorTargetState = {\r\n            format: \"bgra8unorm\",\r\n            blend: {\r\n                color: { srcFactor: \"one\", dstFactor: \"one-minus-src-alpha\" },\r\n                alpha: { srcFactor: \"one\", dstFactor: \"one-minus-src-alpha\" },\r\n            },\r\n        };\r\n        const fragment: GPUFragmentState = {\r\n            module: fragModule,\r\n            entryPoint: \"main\",\r\n            targets: [presentationFormat],\r\n        };\r\n\r\n        const pipelineDesc: GPURenderPipelineDescriptor = {\r\n            label: \"ui-pipeline\",\r\n            layout: pipelineLayout,\r\n\r\n            vertex,\r\n            fragment,\r\n\r\n            // primitive,\r\n        };\r\n        const pipeline = this.device.createRenderPipeline(pipelineDesc);\r\n\r\n        const sampler = this.device.createSampler({\r\n            magFilter: \"nearest\",\r\n            minFilter: \"nearest\",\r\n            mipmapFilter: \"nearest\",\r\n        });\r\n\r\n        const uiTextureDark = await createWebGpuTexture(this.device, \"./assets/textures/field_atlas_dark.png\");\r\n        const uiTextureUniformBindGroupDark = this.device.createBindGroup({\r\n            layout: pipeline.getBindGroupLayout(0),\r\n            entries: [\r\n                { binding: 0, resource: sampler },\r\n                { binding: 1, resource: uiTextureDark.createView() },\r\n            ],\r\n        });\r\n\r\n        const uiTextureLight = await createWebGpuTexture(this.device, \"./assets/textures/field_atlas_light.png\");\r\n        const uiTextureUniformBindGroupLight = this.device.createBindGroup({\r\n            layout: pipeline.getBindGroupLayout(0),\r\n            entries: [\r\n                { binding: 0, resource: sampler },\r\n                { binding: 1, resource: uiTextureLight.createView() },\r\n            ],\r\n        });\r\n\r\n        const uiMatricesBuffer = createWebGpuBufferDynamic(this.device, 4 * 4, Float32Array, GPUBufferUsage.UNIFORM);\r\n        this.device.queue.writeBuffer(uiMatricesBuffer, 0, createOrthographicMatrix(0, width, 0, height, -1, 1));\r\n\r\n        const uiMatricesUniformBindGroup = this.device.createBindGroup({\r\n            layout: pipeline.getBindGroupLayout(1),\r\n            entries: [{ binding: 0, resource: { buffer: uiMatricesBuffer } }],\r\n        });\r\n\r\n        this.drawData = {\r\n            pipeline,\r\n            staticPositionBuffer,\r\n            staticIndicesBuffer,\r\n            staticTextureCoordBuffer,\r\n            dynamicPositionBuffer,\r\n            dynamicIndicesBuffer,\r\n            dynamicTextureCoordBuffer,\r\n            uiMatricesUniformBindGroup,\r\n            uiTextureUniformBindGroupDark,\r\n            uiTextureUniformBindGroupLight,\r\n        };\r\n    }\r\n\r\n    update(gameLogic: GameLogic, fieldCameraState: TFieldCameraState, gameWindow: GameWindow) {\r\n        if (!this.device) {\r\n            throw new Error(\"WebGpuUi is not initialized\");\r\n        }\r\n        if (!this.drawData) {\r\n            throw new Error(\"WebGpuUi drawData in not created!\");\r\n        }\r\n\r\n        const closedMines = Math.min(gameLogic.getClosedAndNotMarkedMinesCount(), 999);\r\n\r\n        const dynamicTextureCoordBufferData = new Float32Array(11 * 4 * 2);\r\n\r\n        const minesSlice = [Math.floor(closedMines / 100) % 10, Math.floor(closedMines / 10) % 10, closedMines % 10];\r\n        for (let i = 0; i < 3; i++) {\r\n            const text = TEXT_ARRAY[minesSlice[i]];\r\n            dynamicTextureCoordBufferData.set(getUV(text, TEXT_SIZE).flat(), i * 4 * 2);\r\n        }\r\n\r\n        const seconds = Math.min(gameLogic.getSecondsFromStart(), 999);\r\n        const secondsSlice = [Math.floor(seconds / 100) % 10, Math.floor(seconds / 10) % 10, seconds % 10];\r\n        for (let i = 3; i < 6; i++) {\r\n            const text = TEXT_ARRAY[secondsSlice[i - 3]];\r\n            dynamicTextureCoordBufferData.set(getUV(text, TEXT_SIZE).flat(), i * 4 * 2);\r\n        }\r\n\r\n        if (this.isMouseInsideFace(gameWindow) && this.mouseOnFaceDown) {\r\n            dynamicTextureCoordBufferData.set(getUV(uiFacePressUvPos, [FACE_SIZE, FACE_SIZE]).flat(), 6 * 4 * 2);\r\n        } else if (gameLogic.isGameOver()) {\r\n            dynamicTextureCoordBufferData.set(getUV(uiFaceLoseUvPos, [FACE_SIZE, FACE_SIZE]).flat(), 6 * 4 * 2);\r\n        } else if (gameLogic.isGameWin()) {\r\n            dynamicTextureCoordBufferData.set(getUV(uiFaceWinUvPos, [FACE_SIZE, FACE_SIZE]).flat(), 6 * 4 * 2);\r\n        } else {\r\n            dynamicTextureCoordBufferData.set(getUV(uiFaceDefaultUvPos, [FACE_SIZE, FACE_SIZE]).flat(), 6 * 4 * 2);\r\n        }\r\n\r\n        // console.log(fieldCameraState);\r\n        dynamicTextureCoordBufferData.set(\r\n            !fieldCameraState.isOnBottom\r\n                ? getUV(uiScrollBotUvPos, uiScrollYUvSize).flat()\r\n                : getUV([500, 500], [1, 1]).flat(),\r\n            7 * 4 * 2\r\n        );\r\n        dynamicTextureCoordBufferData.set(\r\n            !fieldCameraState.isOnTop\r\n                ? getUV(uiScrollTopUvPos, uiScrollYUvSize).flat()\r\n                : getUV([500, 500], [1, 1]).flat(),\r\n            8 * 4 * 2\r\n        );\r\n        dynamicTextureCoordBufferData.set(\r\n            !fieldCameraState.isOnLeft\r\n                ? getUV(uiScrollLeftUvPos, uiScrollXUvSize).flat()\r\n                : getUV([500, 500], [1, 1]).flat(),\r\n            9 * 4 * 2\r\n        );\r\n        dynamicTextureCoordBufferData.set(\r\n            !fieldCameraState.isOnRight\r\n                ? getUV(uiScrollRightUvPos, uiScrollXUvSize).flat()\r\n                : getUV([500, 500], [1, 1]).flat(),\r\n            10 * 4 * 2\r\n        );\r\n\r\n        this.device.queue.writeBuffer(this.drawData.dynamicTextureCoordBuffer, 0, dynamicTextureCoordBufferData);\r\n    }\r\n\r\n    draw() {\r\n        if (!gWebGpuInstance) {\r\n            throw new Error(\"WebGpuInstance is not initialized\");\r\n        }\r\n        if (!this.drawData) {\r\n            throw new Error(\"WebGpuField drawData in not created!\");\r\n        }\r\n\r\n        const passEncoder = gWebGpuInstance?.getPassEncoder();\r\n\r\n        passEncoder.setPipeline(this.drawData.pipeline);\r\n        passEncoder.setViewport(0, 0, this.windowWidth, this.windowHeight, 0, 1);\r\n        passEncoder.setScissorRect(0, 0, this.windowWidth, this.windowHeight);\r\n\r\n        if (getTheme() === \"dark\") {\r\n            passEncoder.setBindGroup(0, this.drawData.uiTextureUniformBindGroupDark);\r\n        } else {\r\n            passEncoder.setBindGroup(0, this.drawData.uiTextureUniformBindGroupLight);\r\n        }\r\n        passEncoder.setBindGroup(1, this.drawData.uiMatricesUniformBindGroup);\r\n\r\n        passEncoder.setVertexBuffer(0, this.drawData.staticPositionBuffer);\r\n        passEncoder.setVertexBuffer(1, this.drawData.staticTextureCoordBuffer);\r\n        passEncoder.setIndexBuffer(this.drawData.staticIndicesBuffer, \"uint32\");\r\n\r\n        passEncoder.drawIndexed(this.staticIndicesCount, 1, 0, 0, 0);\r\n\r\n        passEncoder.setVertexBuffer(0, this.drawData.dynamicPositionBuffer);\r\n        passEncoder.setVertexBuffer(1, this.drawData.dynamicTextureCoordBuffer);\r\n        passEncoder.setIndexBuffer(this.drawData.dynamicIndicesBuffer, \"uint32\");\r\n\r\n        passEncoder.drawIndexed(this.dynamicIndicesCount, 1, 0, 0, 0);\r\n    }\r\n}\r\n","import { IRendererInstance } from \"Game/IRendererInstance\";\r\n\r\nexport class HtmlCanvasInstance implements IRendererInstance {\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private context: CanvasRenderingContext2D | null = null;\r\n\r\n    constructor() {}\r\n\r\n    async init(canvas: HTMLCanvasElement) {\r\n        this.canvas = canvas;\r\n        this.context = this.canvas.getContext(\"2d\");\r\n\r\n        gHtmlCanvasInstance = this;\r\n    }\r\n\r\n    getContext(): CanvasRenderingContext2D {\r\n        if (!this.context) {\r\n            throw new Error(\"HtmlCanvasInstance is not initialized\");\r\n        }\r\n\r\n        return this.context;\r\n    }\r\n\r\n    beginFrame() {\r\n        if (!this.canvas || !this.context) {\r\n            throw new Error(\"HtmlCanvasInstance is not initialized\");\r\n        }\r\n\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    endFrame() {}\r\n}\r\n\r\nexport let gHtmlCanvasInstance: HtmlCanvasInstance | null = null;\r\n","export const createHtmlCanvasTexture = (filename: string): Promise<HTMLImageElement> => {\r\n    return new Promise((resolve, reject) => {\r\n        const img = new Image();\r\n        img.onload = () => resolve(img);\r\n        img.onerror = reject;\r\n        img.src = filename;\r\n    });\r\n};\r\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { GameLogic } from \"Game/GameLogic\";\r\nimport { GameWindow } from \"GameWidnow\";\r\nimport { calcCanvasSize } from \"Game/Utils\";\r\nimport { IRendererInstanceConstructor } from \"Game/IRendererInstance\";\r\nimport { IFieldConstructor } from \"Game/IField\";\r\n\r\nimport { GameDataBase, getStartupInputs, startNewGame } from \"FieldSerializer\";\r\n\r\nimport { WebGpuInstance } from \"WebGpu/WebGpuInstance\";\r\nimport { WebGpuField } from \"WebGpu/WebGpuField\";\r\nimport { WebGpuUi } from \"WebGpu/WebGpuUi\";\r\n\r\nimport { HtmlCanvasInstance } from \"HtmlCanvas/HtmlCanvasInstance\";\r\nimport { HtmlCanvasField } from \"HtmlCanvas/HtmlCanvasField\";\r\nimport { HtmlCanvasUi } from \"HtmlCanvas/HtmlCanvasUi\";\r\n\r\nimport { detectColorScheme, getTheme } from \"Theme\";\r\n\r\nimport \"./styles.css\";\r\nimport { IUiConstructor } from \"Game/IUi\";\r\n\r\nconst THEME_DARK_ICON = \"./assets/img/theme_dark.png\";\r\nconst THEME_LIGHT_ICON = \"./assets/img/theme_light.png\";\r\n\r\nlet InstanceType: IRendererInstanceConstructor = WebGpuInstance;\r\nlet FieldType: IFieldConstructor = WebGpuField;\r\nlet UiType: IUiConstructor = WebGpuUi;\r\n\r\nif (true) {\r\n    InstanceType = HtmlCanvasInstance;\r\n    FieldType = HtmlCanvasField;\r\n    UiType = HtmlCanvasUi;\r\n}\r\n\r\ndetectColorScheme();\r\n\r\nconst themeToggleSwitch = document.querySelector('#theme-switch input[type=\"checkbox\"]') as HTMLInputElement;\r\nconst themeIcon = document.querySelector(\"#theme-switch img\") as HTMLImageElement;\r\n\r\nfunction switchTheme(e: Event) {\r\n    const target = e.target as HTMLInputElement;\r\n    if (target.checked) {\r\n        localStorage.setItem(\"theme\", \"dark\");\r\n        document.documentElement.setAttribute(\"data-theme\", \"dark\");\r\n        themeToggleSwitch.checked = true;\r\n        themeIcon.src = THEME_DARK_ICON;\r\n    } else {\r\n        localStorage.setItem(\"theme\", \"light\");\r\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\r\n        themeToggleSwitch.checked = false;\r\n        themeIcon.src = THEME_LIGHT_ICON;\r\n    }\r\n}\r\n\r\nthemeToggleSwitch.addEventListener(\"change\", switchTheme, false);\r\n\r\ndocument.getElementById(\"form-field\")?.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(document.getElementById(\"form-field\") as HTMLFormElement);\r\n    const cols = parseInt((formData.get(\"cols\") as string) || \"0\");\r\n    const rows = parseInt((formData.get(\"rows\") as string) || \"0\");\r\n    const mines = parseInt((formData.get(\"mines\") as string) || \"0\");\r\n    if (!cols || !rows || !mines) {\r\n        return;\r\n    }\r\n\r\n    if (mines >= cols * rows) {\r\n        document.getElementById(\"error-message\")!.innerHTML = \"Mines count must be less than field size\";\r\n        return;\r\n    }\r\n\r\n    startNewGame(cols, rows, mines);\r\n});\r\ndocument.getElementById(\"new-game-beginner\")?.addEventListener(\"click\", () => {\r\n    startNewGame(\"9\", \"9\", \"10\");\r\n});\r\ndocument.getElementById(\"new-game-intermediate\")?.addEventListener(\"click\", () => {\r\n    startNewGame(\"16\", \"16\", \"40\");\r\n});\r\ndocument.getElementById(\"new-game-expert\")?.addEventListener(\"click\", () => {\r\n    startNewGame(\"30\", \"16\", \"99\");\r\n});\r\ndocument.getElementById(\"load-game\")?.addEventListener(\"click\", () => {\r\n    window.location.href = \"?load=true\";\r\n});\r\n\r\nif (getTheme() == \"dark\") {\r\n    themeToggleSwitch.checked = true;\r\n    themeIcon.src = \"assets/img/theme_dark.png\";\r\n} else {\r\n    themeToggleSwitch.checked = false;\r\n    themeIcon.src = \"assets/img/theme_light.png\";\r\n}\r\n\r\nconst { cols, rows, mines, load } = getStartupInputs();\r\n\r\nconst gameLogic = new GameLogic([cols, rows], mines);\r\n\r\nconst start = async () => {\r\n    const { width: canvasWidth, height: canvasHeight } = calcCanvasSize(\r\n        gameLogic.getFieldColSize(),\r\n        gameLogic.getFieldRowSize()\r\n    );\r\n    const canvas = document.getElementById(\"app\") as HTMLCanvasElement;\r\n    canvas.width = canvasWidth;\r\n    canvas.height = canvasHeight;\r\n\r\n    const instance = new InstanceType();\r\n    const gameWindow = new GameWindow(canvas);\r\n\r\n    let frame = 0;\r\n    await instance.init(canvas);\r\n\r\n    const field = new FieldType();\r\n    await field.init(canvas.width, canvas.height);\r\n\r\n    const ui = new UiType();\r\n    await ui.init(canvas.width, canvas.height);\r\n\r\n    gameWindow.setOnMouseButtonUp((button) => {\r\n        if (button === 0) {\r\n            const hoveredCell = field.getHoveredCell(gameWindow);\r\n            if (field.isMouseInside(gameWindow) && gameLogic.isCellExists(hoveredCell.col, hoveredCell.row)) {\r\n                gameLogic.openCell(hoveredCell.col, hoveredCell.row);\r\n            }\r\n            ui.checkFaceClickUp(gameLogic, gameWindow);\r\n        }\r\n    });\r\n    gameWindow.setOnMouseButtonDown((button) => {\r\n        if (button === 0) {\r\n            ui.checkFaceClickDown(gameWindow);\r\n        }\r\n        if (button === 2) {\r\n            const hoveredCell = field.getHoveredCell(gameWindow);\r\n            if (gameLogic.isCellExists(hoveredCell.col, hoveredCell.row)) {\r\n                gameLogic.markCell(hoveredCell.col, hoveredCell.row);\r\n            }\r\n        }\r\n    });\r\n    gameWindow.setOnWheel((x, y) => {\r\n        field.moveCamera(gameLogic, x, y);\r\n    });\r\n\r\n    const render = () => {\r\n        frame++;\r\n\r\n        gameLogic.update();\r\n        field.update(gameLogic, gameWindow);\r\n        ui.update(gameLogic, field.getFieldCameraState(gameLogic), gameWindow);\r\n\r\n        instance.beginFrame();\r\n\r\n        field.draw();\r\n        ui.draw();\r\n\r\n        instance.endFrame();\r\n\r\n        requestAnimationFrame(render);\r\n    };\r\n\r\n    requestAnimationFrame(render);\r\n};\r\n\r\nconst gameDataBase = new GameDataBase(\r\n    () => {\r\n        document.getElementById(\"save-game\")?.addEventListener(\"click\", () => {\r\n            gameDataBase.saveGame(gameLogic);\r\n        });\r\n\r\n        if (load) {\r\n            gameDataBase.loadGame(\r\n                gameLogic,\r\n                () => {\r\n                    document\r\n                        .getElementById(\"field-cols\")\r\n                        ?.setAttribute(\"value\", gameLogic.getFieldColSize().toString());\r\n                    document\r\n                        .getElementById(\"field-rows\")\r\n                        ?.setAttribute(\"value\", gameLogic.getFieldRowSize().toString());\r\n                    document\r\n                        .getElementById(\"field-mines\")\r\n                        ?.setAttribute(\"value\", gameLogic.getFieldMinesCount().toString());\r\n\r\n                    const params = new URLSearchParams(window.location.search);\r\n                    params.delete(\"load\");\r\n                    console.log(params.toString());\r\n                    history.replaceState(null, \"\", \"?\" + params.toString());\r\n\r\n                    start();\r\n                },\r\n                () => {\r\n                    document.getElementById(\"error-message\")!.innerHTML = \"Error loading game\";\r\n                }\r\n            );\r\n        }\r\n    },\r\n    () => {\r\n        if (load) {\r\n            document.getElementById(\"error-message\")!.innerHTML = \"Error loading game\";\r\n        }\r\n    }\r\n);\r\n\r\nif (!load) {\r\n    document.getElementById(\"field-cols\")?.setAttribute(\"value\", cols.toString());\r\n    document.getElementById(\"field-rows\")?.setAttribute(\"value\", rows.toString());\r\n    document.getElementById(\"field-mines\")?.setAttribute(\"value\", mines.toString());\r\n\r\n    gameLogic.generateField();\r\n\r\n    start();\r\n}\r\n","import { GameWindow } from \"GameWidnow\";\r\n\r\nimport { GameLogic } from \"Game/GameLogic\";\r\nimport { IField, GameField } from \"Game/IField\";\r\nimport { CAMERA_OFFSET_X, CAMERA_OFFSET_Y, FIELD_CELL_SIZE } from \"Game/Constants\";\r\n\r\nimport { createWebGpuBufferDynamic, createWebGpuBufferWithData } from \"WebGpu/WebGpuBuffer\";\r\nimport { createOrthographicMatrix, createTranslationMatrix, Float32ArrayConcat } from \"WebGpu/Matrices\";\r\nimport { createWebGpuTexture } from \"WebGpu/WebGpuTexture\";\r\nimport { gWebGpuInstance } from \"WebGpu/WebGpuInstance\";\r\n\r\nimport { getTheme } from \"Theme\";\r\n\r\nimport vertShaderCode from \"assets/shaders/field.vert.wgsl\";\r\nimport fragShaderCode from \"assets/shaders/field.frag.wgsl\";\r\n\r\ninterface TDrawData {\r\n    pipeline: GPURenderPipeline;\r\n    positionBuffer: GPUBuffer;\r\n    indicesBuffer: GPUBuffer;\r\n    textureIdBuffer: GPUBuffer;\r\n    offsetBuffer: GPUBuffer;\r\n    fieldMatricesBuffer: GPUBuffer;\r\n    fieldTextureUniformBindGroupDark: GPUBindGroup;\r\n    fieldTextureUniformBindGroupLight: GPUBindGroup;\r\n    fieldMatricesUniformBindGroup: GPUBindGroup;\r\n    drawValues: GPUBuffer;\r\n}\r\n\r\nexport class WebGpuField extends GameField implements IField {\r\n    private device: GPUDevice | null = null;\r\n\r\n    private drawData: TDrawData | null = null;\r\n\r\n    async init(width: number, height: number) {\r\n        if (!gWebGpuInstance) {\r\n            throw new Error(\"WebGpuInstance is not initialized\");\r\n        }\r\n\r\n        this.baseInit(width, height);\r\n\r\n        this.device = gWebGpuInstance.getDevice();\r\n\r\n        // prettier-ignore\r\n        const positionBuffer = createWebGpuBufferWithData(\r\n            this.device,\r\n            [\r\n                [0              , 0              ],\r\n                [FIELD_CELL_SIZE, 0              ],\r\n                [0              , FIELD_CELL_SIZE],\r\n                [FIELD_CELL_SIZE, FIELD_CELL_SIZE],\r\n            ],\r\n            Float32Array,\r\n            GPUBufferUsage.VERTEX\r\n        );\r\n\r\n        const indicesBuffer = createWebGpuBufferWithData(\r\n            this.device,\r\n            [\r\n                [0, 1, 2],\r\n                [1, 2, 3],\r\n            ],\r\n            Uint32Array,\r\n            GPUBufferUsage.INDEX\r\n        );\r\n        const { maxDrawColCount, maxDrawRowCount } = this.getMaxFieldRowAndColCount(\r\n            this.windowWidth,\r\n            this.windowHeight\r\n        );\r\n\r\n        const textureIdBuffer = createWebGpuBufferDynamic(\r\n            this.device,\r\n            maxDrawColCount * maxDrawRowCount * 4,\r\n            Uint32Array,\r\n            GPUBufferUsage.VERTEX\r\n        );\r\n\r\n        const offsetBuffer = createWebGpuBufferDynamic(\r\n            this.device,\r\n            maxDrawColCount * maxDrawRowCount * 2,\r\n            Float32Array,\r\n            GPUBufferUsage.VERTEX\r\n        );\r\n\r\n        const drawIndexedIndirectParameters = new Uint32Array(5);\r\n        drawIndexedIndirectParameters[0] = 6;\r\n        drawIndexedIndirectParameters[1] = maxDrawRowCount * maxDrawColCount;\r\n        drawIndexedIndirectParameters[2] = 0;\r\n        drawIndexedIndirectParameters[3] = 0;\r\n        drawIndexedIndirectParameters[4] = 0;\r\n\r\n        const drawValues = this.device.createBuffer({\r\n            size: 20,\r\n            usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_DST,\r\n        });\r\n        this.device.queue.writeBuffer(\r\n            drawValues,\r\n            0,\r\n            drawIndexedIndirectParameters,\r\n            0,\r\n            drawIndexedIndirectParameters.length\r\n        );\r\n\r\n        const fieldAtlasTile = (x: number, y: number): string => {\r\n            return `vec2f(${x * 0.125}, ${y * 0.125 + 0.125}), \r\n                vec2f(${x * 0.125 + 0.125}, ${y * 0.125 + 0.125}), \r\n                vec2f(${x * 0.125}, ${y * 0.125}), \r\n                vec2f(${x * 0.125 + 0.125}, ${y * 0.125})`;\r\n        };\r\n\r\n        const fieldAtlasTiles = [\r\n            fieldAtlasTile(0, 0),\r\n            fieldAtlasTile(1, 0),\r\n            fieldAtlasTile(2, 0),\r\n            fieldAtlasTile(3, 0),\r\n            fieldAtlasTile(4, 0),\r\n            fieldAtlasTile(5, 0),\r\n            fieldAtlasTile(6, 0),\r\n            fieldAtlasTile(7, 0),\r\n            fieldAtlasTile(0, 1),\r\n            fieldAtlasTile(1, 1),\r\n            fieldAtlasTile(2, 1),\r\n            fieldAtlasTile(3, 1),\r\n            fieldAtlasTile(4, 1),\r\n            fieldAtlasTile(5, 1),\r\n            fieldAtlasTile(6, 1),\r\n            fieldAtlasTile(7, 1),\r\n            fieldAtlasTile(0, 2),\r\n            fieldAtlasTile(1, 2),\r\n            fieldAtlasTile(2, 2),\r\n            fieldAtlasTile(3, 2),\r\n            fieldAtlasTile(4, 2),\r\n            fieldAtlasTile(5, 2),\r\n            fieldAtlasTile(6, 2),\r\n        ];\r\n\r\n        const vertShaderCodeStr = vertShaderCode\r\n            .replace(\"{{UV_COUNT}}\", `${fieldAtlasTiles.length * 4}`)\r\n            .replace(\"{{UV}}\", fieldAtlasTiles.join(\",\\n\"));\r\n\r\n        const vsmDesc = { code: vertShaderCodeStr };\r\n        const vertModule = this.device.createShaderModule(vsmDesc);\r\n\r\n        const fsmDesc = { code: fragShaderCode };\r\n        const fragModule = this.device.createShaderModule(fsmDesc);\r\n\r\n        const positionAttribDesc: GPUVertexAttribute = {\r\n            shaderLocation: 0,\r\n            offset: 0,\r\n            format: \"float32x2\",\r\n        };\r\n        const positionBufferDesc: GPUVertexBufferLayout = {\r\n            attributes: [positionAttribDesc],\r\n            arrayStride: 4 * 2, // sizeof(float) * 2\r\n            stepMode: \"vertex\",\r\n        };\r\n\r\n        const textureIdAttribDesc: GPUVertexAttribute = {\r\n            shaderLocation: 1,\r\n            offset: 0,\r\n            format: \"uint32\",\r\n        };\r\n        const textureIdBufferDesc: GPUVertexBufferLayout = {\r\n            attributes: [textureIdAttribDesc],\r\n            arrayStride: 4 * 1, // sizeof(int) * 1\r\n            stepMode: \"instance\",\r\n        };\r\n\r\n        const offsetAttribDesc: GPUVertexAttribute = {\r\n            shaderLocation: 2,\r\n            offset: 0,\r\n            format: \"float32x2\",\r\n        };\r\n        const offsetBufferDesc: GPUVertexBufferLayout = {\r\n            attributes: [offsetAttribDesc],\r\n            arrayStride: 4 * 2, // sizeof(float) * 2\r\n            stepMode: \"instance\",\r\n        };\r\n\r\n        const fieldTextureBindGroupLayout: GPUBindGroupLayout = this.device.createBindGroupLayout({\r\n            entries: [\r\n                { binding: 0, visibility: GPUShaderStage.FRAGMENT, sampler: {} },\r\n                { binding: 1, visibility: GPUShaderStage.FRAGMENT, texture: {} },\r\n            ],\r\n        });\r\n\r\n        const fieldMatricesBindGroupLayout: GPUBindGroupLayout = this.device.createBindGroupLayout({\r\n            entries: [{ binding: 0, visibility: GPUShaderStage.VERTEX, buffer: {} }],\r\n        });\r\n\r\n        const pipelineLayoutDesc: GPUPipelineLayoutDescriptor = {\r\n            bindGroupLayouts: [fieldTextureBindGroupLayout, fieldMatricesBindGroupLayout],\r\n        };\r\n        const pipelineLayout = this.device.createPipelineLayout(pipelineLayoutDesc);\r\n\r\n        const vertex: GPUVertexState = {\r\n            module: vertModule,\r\n            entryPoint: \"main\",\r\n            buffers: [positionBufferDesc, textureIdBufferDesc, offsetBufferDesc],\r\n        };\r\n\r\n        const presentationFormat: GPUColorTargetState = { format: \"bgra8unorm\" };\r\n        const fragment: GPUFragmentState = {\r\n            module: fragModule,\r\n            entryPoint: \"main\",\r\n            targets: [presentationFormat],\r\n        };\r\n\r\n        const pipelineDesc: GPURenderPipelineDescriptor = {\r\n            label: \"field-pipeline\",\r\n            layout: pipelineLayout,\r\n\r\n            vertex,\r\n            fragment,\r\n\r\n            // primitive,\r\n        };\r\n        const pipeline = this.device.createRenderPipeline(pipelineDesc);\r\n\r\n        const sampler = this.device.createSampler({\r\n            magFilter: \"nearest\",\r\n            minFilter: \"nearest\",\r\n            mipmapFilter: \"nearest\",\r\n        });\r\n\r\n        const fieldTextureDark = await createWebGpuTexture(this.device, \"./assets/textures/field_atlas_dark.png\");\r\n        const fieldTextureUniformBindGroupDark = this.device.createBindGroup({\r\n            layout: pipeline.getBindGroupLayout(0),\r\n            entries: [\r\n                { binding: 0, resource: sampler },\r\n                { binding: 1, resource: fieldTextureDark.createView() },\r\n            ],\r\n        });\r\n\r\n        const fieldTextureLight = await createWebGpuTexture(this.device, \"./assets/textures/field_atlas_light.png\");\r\n        const fieldTextureUniformBindGroupLight = this.device.createBindGroup({\r\n            layout: pipeline.getBindGroupLayout(0),\r\n            entries: [\r\n                { binding: 0, resource: sampler },\r\n                { binding: 1, resource: fieldTextureLight.createView() },\r\n            ],\r\n        });\r\n\r\n        const fieldMatricesBuffer = createWebGpuBufferDynamic(\r\n            this.device,\r\n            4 * 4 * 2,\r\n            Float32Array,\r\n            GPUBufferUsage.UNIFORM\r\n        );\r\n\r\n        const fieldMatricesUniformBindGroup = this.device.createBindGroup({\r\n            layout: pipeline.getBindGroupLayout(1),\r\n            entries: [{ binding: 0, resource: { buffer: fieldMatricesBuffer } }],\r\n        });\r\n\r\n        this.drawData = {\r\n            pipeline,\r\n            positionBuffer,\r\n            indicesBuffer,\r\n            offsetBuffer,\r\n            fieldMatricesBuffer,\r\n            textureIdBuffer,\r\n            fieldMatricesUniformBindGroup,\r\n            fieldTextureUniformBindGroupDark,\r\n            fieldTextureUniformBindGroupLight,\r\n            drawValues,\r\n        };\r\n    }\r\n\r\n    update(gameLogic: GameLogic, gameWindow: GameWindow) {\r\n        if (!this.device) {\r\n            throw new Error(\"WebGpuField is not initialized\");\r\n        }\r\n        if (!this.drawData) {\r\n            throw new Error(\"WebGpuField drawData in not created!\");\r\n        }\r\n\r\n        const { maxDrawColCount, maxDrawRowCount } = this.getMaxFieldRowAndColCount(\r\n            this.windowWidth,\r\n            this.windowHeight\r\n        );\r\n\r\n        const offsetBufferData = new Float32Array(maxDrawColCount * maxDrawRowCount * 2);\r\n\r\n        for (let i = 0; i < maxDrawRowCount * maxDrawColCount; i++) {\r\n            const row = Math.floor(i / maxDrawColCount);\r\n            const col = i % maxDrawColCount;\r\n            offsetBufferData[i * 2 + 0] = col * FIELD_CELL_SIZE;\r\n            offsetBufferData[i * 2 + 1] = row * FIELD_CELL_SIZE;\r\n        }\r\n\r\n        const { col: hoveredCellCol, row: hoveredCellRow } = this.getHoveredCell(gameWindow);\r\n\r\n        const isMouseInside = this.isMouseInside(gameWindow);\r\n        const isLeftMouseButtonPressed = gameWindow.isMouseButtonPressed(0);\r\n        const isHoveredCellOpened =\r\n            gameLogic.isCellExists(hoveredCellCol, hoveredCellRow) &&\r\n            gameLogic.isCellOpened(hoveredCellCol, hoveredCellRow);\r\n\r\n        const textureIdBufferData = new Uint32Array(maxDrawRowCount * maxDrawColCount);\r\n        const textureIdBufferColOffset = Math.ceil(this.cameraPosition.x / FIELD_CELL_SIZE);\r\n        const textureIdBufferRowOffset = Math.ceil(this.cameraPosition.y / FIELD_CELL_SIZE);\r\n        for (let i = 0; i < maxDrawRowCount * maxDrawColCount; i++) {\r\n            const row = Math.floor(i / maxDrawColCount) - textureIdBufferRowOffset;\r\n            const col = (i % maxDrawColCount) - textureIdBufferColOffset;\r\n\r\n            const isPressed =\r\n                gameLogic.isGamePlaying() &&\r\n                isMouseInside &&\r\n                isLeftMouseButtonPressed &&\r\n                ((hoveredCellCol === col && hoveredCellRow === row) ||\r\n                    (isHoveredCellOpened &&\r\n                        Math.abs(hoveredCellCol - col) <= 1 &&\r\n                        Math.abs(hoveredCellRow - row) <= 1));\r\n            textureIdBufferData[i] = this.getFieldTextureId(gameLogic, col, row, isPressed);\r\n        }\r\n\r\n        this.device.queue.writeBuffer(this.drawData.textureIdBuffer, 0, textureIdBufferData);\r\n        this.device.queue.writeBuffer(this.drawData.offsetBuffer, 0, offsetBufferData);\r\n\r\n        this.device.queue.writeBuffer(\r\n            this.drawData.fieldMatricesBuffer,\r\n            0,\r\n            Float32ArrayConcat(\r\n                createOrthographicMatrix(0, this.windowWidth, 0, this.windowHeight, -1, 1),\r\n                createTranslationMatrix(\r\n                    CAMERA_OFFSET_X + (this.cameraPosition.x % FIELD_CELL_SIZE),\r\n                    CAMERA_OFFSET_Y + (this.cameraPosition.y % FIELD_CELL_SIZE),\r\n                    0\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    draw() {\r\n        if (!gWebGpuInstance) {\r\n            throw new Error(\"WebGpuInstance is not initialized\");\r\n        }\r\n        if (!this.drawData) {\r\n            throw new Error(\"WebGpuField drawData in not created!\");\r\n        }\r\n\r\n        const passEncoder = gWebGpuInstance?.getPassEncoder();\r\n\r\n        passEncoder.setPipeline(this.drawData.pipeline);\r\n        passEncoder.setViewport(0, 0, this.windowWidth, this.windowHeight, 0, 1);\r\n        passEncoder.setScissorRect(0, 0, this.windowWidth, this.windowHeight);\r\n\r\n        if (getTheme() === \"dark\") {\r\n            passEncoder.setBindGroup(0, this.drawData.fieldTextureUniformBindGroupDark);\r\n        } else {\r\n            passEncoder.setBindGroup(0, this.drawData.fieldTextureUniformBindGroupLight);\r\n        }\r\n        passEncoder.setBindGroup(1, this.drawData.fieldMatricesUniformBindGroup);\r\n\r\n        passEncoder.setVertexBuffer(0, this.drawData.positionBuffer);\r\n        passEncoder.setVertexBuffer(1, this.drawData.textureIdBuffer);\r\n        passEncoder.setVertexBuffer(2, this.drawData.offsetBuffer);\r\n        passEncoder.setIndexBuffer(this.drawData.indicesBuffer, \"uint32\");\r\n\r\n        passEncoder.drawIndexedIndirect(this.drawData.drawValues, 0);\r\n    }\r\n}\r\n","import { GameWindow } from \"GameWidnow\";\r\n\r\nimport { GameLogic } from \"Game/GameLogic\";\r\nimport { GameField, IField } from \"Game/IField\";\r\nimport { CAMERA_OFFSET_X, CAMERA_OFFSET_Y, FIELD_CELL_SIZE } from \"Game/Constants\";\r\n\r\nimport { gHtmlCanvasInstance } from \"HtmlCanvas/HtmlCanvasInstance\";\r\nimport { createHtmlCanvasTexture } from \"HtmlCanvas/HtmlCanvasTexture\";\r\n\r\nimport { getTheme } from \"Theme\";\r\nimport { Vec2 } from \"Types\";\r\n\r\ninterface TDrawData {\r\n    uiTextureDark: HTMLImageElement;\r\n    uiTextureLight: HTMLImageElement;\r\n}\r\n\r\nexport class HtmlCanvasField extends GameField implements IField {\r\n    private context: CanvasRenderingContext2D | null = null;\r\n\r\n    private drawData: TDrawData | null = null;\r\n\r\n    private textureIdArray: Uint8Array = new Uint8Array(0);\r\n\r\n    async init(width: number, height: number) {\r\n        if (!gHtmlCanvasInstance) {\r\n            throw new Error(\"HtmlCanvasInstance is not initialized\");\r\n        }\r\n\r\n        this.baseInit(width, height);\r\n\r\n        this.context = gHtmlCanvasInstance.getContext();\r\n\r\n        const { maxDrawColCount, maxDrawRowCount } = this.getMaxFieldRowAndColCount(\r\n            this.windowWidth,\r\n            this.windowHeight\r\n        );\r\n        this.textureIdArray = new Uint8Array(maxDrawColCount * maxDrawRowCount);\r\n\r\n        const uiTextureDark = await createHtmlCanvasTexture(\"./assets/textures/field_atlas_dark.png\");\r\n        const uiTextureLight = await createHtmlCanvasTexture(\"./assets/textures/field_atlas_light.png\");\r\n\r\n        this.drawData = {\r\n            uiTextureDark,\r\n            uiTextureLight,\r\n        };\r\n    }\r\n\r\n    update(gameLogic: GameLogic, gameWindow: GameWindow) {\r\n        const { maxDrawColCount, maxDrawRowCount } = this.getMaxFieldRowAndColCount(\r\n            this.windowWidth,\r\n            this.windowHeight\r\n        );\r\n        const { col: hoveredCellCol, row: hoveredCellRow } = this.getHoveredCell(gameWindow);\r\n\r\n        const isMouseInside = this.isMouseInside(gameWindow);\r\n        const isLeftMouseButtonPressed = gameWindow.isMouseButtonPressed(0);\r\n        const isHoveredCellOpened =\r\n            gameLogic.isCellExists(hoveredCellCol, hoveredCellRow) &&\r\n            gameLogic.isCellOpened(hoveredCellCol, hoveredCellRow);\r\n\r\n        const textureIdBufferColOffset = Math.ceil(this.cameraPosition.x / FIELD_CELL_SIZE);\r\n        const textureIdBufferRowOffset = Math.ceil(this.cameraPosition.y / FIELD_CELL_SIZE);\r\n        for (let i = 0; i < maxDrawRowCount * maxDrawColCount; i++) {\r\n            const row = Math.floor(i / maxDrawColCount) - textureIdBufferRowOffset;\r\n            const col = (i % maxDrawColCount) - textureIdBufferColOffset;\r\n\r\n            const isPressed =\r\n                gameLogic.isGamePlaying() &&\r\n                isMouseInside &&\r\n                isLeftMouseButtonPressed &&\r\n                ((hoveredCellCol === col && hoveredCellRow === row) ||\r\n                    (isHoveredCellOpened &&\r\n                        Math.abs(hoveredCellCol - col) <= 1 &&\r\n                        Math.abs(hoveredCellRow - row) <= 1));\r\n            this.textureIdArray[i] = this.getFieldTextureId(gameLogic, col, row, isPressed);\r\n        }\r\n    }\r\n\r\n    private drawRect(pos: Vec2, textureId: number) {\r\n        if (!this.context) {\r\n            throw new Error(\"HtmlCanvasUi is not initialized\");\r\n        }\r\n\r\n        if (!this.drawData) {\r\n            throw new Error(\"WebGpuUi drawData in not created!\");\r\n        }\r\n\r\n        const texture = getTheme() === \"dark\" ? this.drawData.uiTextureDark : this.drawData.uiTextureLight;\r\n\r\n        const atlasPos = [(textureId % 8) * FIELD_CELL_SIZE * 2, Math.floor(textureId / 8) * FIELD_CELL_SIZE * 2];\r\n\r\n        this.context.drawImage(\r\n            texture,\r\n            atlasPos[0],\r\n            atlasPos[1],\r\n            FIELD_CELL_SIZE * 2,\r\n            FIELD_CELL_SIZE * 2,\r\n            pos[0],\r\n            this.windowHeight - pos[1] - FIELD_CELL_SIZE,\r\n            FIELD_CELL_SIZE,\r\n            FIELD_CELL_SIZE\r\n        );\r\n    }\r\n\r\n    draw() {\r\n        const offsetX = CAMERA_OFFSET_X + (this.cameraPosition.x % FIELD_CELL_SIZE);\r\n        const offsetY = CAMERA_OFFSET_Y + (this.cameraPosition.y % FIELD_CELL_SIZE);\r\n\r\n        const { maxDrawColCount, maxDrawRowCount } = this.getMaxFieldRowAndColCount(\r\n            this.windowWidth,\r\n            this.windowHeight\r\n        );\r\n\r\n        for (let i = 0; i < maxDrawRowCount * maxDrawColCount; i++) {\r\n            const row = Math.floor(i / maxDrawColCount);\r\n            const col = i % maxDrawColCount;\r\n            this.drawRect([col * FIELD_CELL_SIZE + offsetX, row * FIELD_CELL_SIZE + offsetY], this.textureIdArray[i]);\r\n        }\r\n    }\r\n}\r\n","import { GameWindow } from \"GameWidnow\";\r\n\r\nimport { GameLogic } from \"Game/GameLogic\";\r\nimport { TFieldCameraState } from \"Game/IField\";\r\nimport {\r\n    createUiSpriteData,\r\n    GameUi,\r\n    IUi,\r\n    TEXT_ARRAY,\r\n    TUiSpriteData,\r\n    uiFrameBorderBot,\r\n    uiFrameBorderBotLeft,\r\n    uiFrameBorderBotRight,\r\n    uiFrameBorderTop,\r\n    uiFrameBorderTopLeft,\r\n    uiFrameBorderTopRight,\r\n    uiFrameCenter,\r\n    uiFrameBorderLeft,\r\n    uiFrameBorderRight,\r\n    uiFrameBorderCenterLeft,\r\n    uiFrameBorderCenterRight,\r\n    uiFrameBorderCenter,\r\n    uiFrameInfoLeft,\r\n    uiFrameInfoRight,\r\n    uiTextMinesPosArray,\r\n    uiTextTimePosArray,\r\n    uiFaceDefaultUvPos,\r\n    uiFacePressUvPos,\r\n    uiFaceWinUvPos,\r\n    uiFaceLoseUvPos,\r\n    uiFacePos,\r\n    uiScrollPointTop,\r\n    uiScrollPointLeft,\r\n    uiScrollPointRight,\r\n    uiScrollPointBot,\r\n} from \"Game/IUi\";\r\n\r\nimport { gHtmlCanvasInstance } from \"HtmlCanvas/HtmlCanvasInstance\";\r\nimport { Vec2 } from \"Types\";\r\nimport { createHtmlCanvasTexture } from \"./HtmlCanvasTexture\";\r\n\r\nimport { getTheme } from \"Theme\";\r\nimport { FACE_SIZE, TEXT_SIZE, TEXT_SYM_SIZE } from \"Game/Constants\";\r\n\r\ntype TFaceState = \"default\" | \"press\" | \"win\" | \"lose\";\r\n\r\ninterface TDrawData {\r\n    uiTextureDark: HTMLImageElement;\r\n    uiTextureLight: HTMLImageElement;\r\n}\r\n\r\nexport class HtmlCanvasUi extends GameUi implements IUi {\r\n    private context: CanvasRenderingContext2D | null = null;\r\n\r\n    private drawData: TDrawData | null = null;\r\n\r\n    private closedMines: number = 0;\r\n    private seconds: number = 0;\r\n\r\n    private faceState: TFaceState = \"default\";\r\n\r\n    private fieldCameraState: TFieldCameraState = {\r\n        isOnBottom: false,\r\n        isOnLeft: false,\r\n        isOnRight: false,\r\n        isOnTop: false,\r\n    };\r\n\r\n    async init(width: number, height: number) {\r\n        if (!gHtmlCanvasInstance) {\r\n            throw new Error(\"HtmlCanvasInstance is not initialized\");\r\n        }\r\n\r\n        this.baseInit(width, height);\r\n\r\n        this.context = gHtmlCanvasInstance.getContext();\r\n\r\n        const uiTextureDark = await createHtmlCanvasTexture(\"./assets/textures/field_atlas_dark.png\");\r\n        const uiTextureLight = await createHtmlCanvasTexture(\"./assets/textures/field_atlas_light.png\");\r\n\r\n        this.drawData = {\r\n            uiTextureDark,\r\n            uiTextureLight,\r\n        };\r\n    }\r\n\r\n    update(gameLogic: GameLogic, fieldCameraState: TFieldCameraState, gameWindow: GameWindow) {\r\n        this.closedMines = Math.min(gameLogic.getClosedAndNotMarkedMinesCount(), 999);\r\n        this.seconds = Math.min(gameLogic.getSecondsFromStart(), 999);\r\n        this.fieldCameraState = fieldCameraState;\r\n\r\n        this.faceState = \"default\";\r\n        if (this.isMouseInsideFace(gameWindow) && this.mouseOnFaceDown) {\r\n            this.faceState = \"press\";\r\n        } else if (gameLogic.isGameOver()) {\r\n            this.faceState = \"lose\";\r\n        } else if (gameLogic.isGameWin()) {\r\n            this.faceState = \"win\";\r\n        }\r\n    }\r\n\r\n    private drawRect(sprite: TUiSpriteData) {\r\n        if (!this.context) {\r\n            throw new Error(\"HtmlCanvasUi is not initialized\");\r\n        }\r\n\r\n        if (!this.drawData) {\r\n            throw new Error(\"WebGpuUi drawData in not created!\");\r\n        }\r\n\r\n        const texture = getTheme() === \"dark\" ? this.drawData.uiTextureDark : this.drawData.uiTextureLight;\r\n\r\n        this.context.drawImage(\r\n            texture,\r\n            sprite.atlasPos[0],\r\n            sprite.atlasPos[1],\r\n            sprite.atlasSize[0],\r\n            sprite.atlasSize[1],\r\n            sprite.spritePos[0],\r\n            this.windowHeight - sprite.spritePos[1] - sprite.spriteSize[1],\r\n            sprite.spriteSize[0],\r\n            sprite.spriteSize[1]\r\n        );\r\n    }\r\n\r\n    draw() {\r\n        if (!this.context) {\r\n            throw new Error(\"HTMLCanvasUi is not initialized\");\r\n        }\r\n\r\n        this.drawRect(uiFrameBorderBotLeft(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderBotRight(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderTopLeft(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderTopRight(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderBot(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderTop(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameCenter(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderLeft(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderRight(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderCenterLeft(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderCenterRight(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameBorderCenter(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameInfoLeft(this.windowWidth, this.windowHeight));\r\n        this.drawRect(uiFrameInfoRight(this.windowWidth, this.windowHeight));\r\n\r\n        const minesSlice = [\r\n            Math.floor(this.closedMines / 100) % 10,\r\n            Math.floor(this.closedMines / 10) % 10,\r\n            this.closedMines % 10,\r\n        ];\r\n        for (let i = 0; i < 3; i++) {\r\n            const text = TEXT_ARRAY[minesSlice[i]];\r\n            this.drawRect(\r\n                createUiSpriteData(\r\n                    uiTextMinesPosArray[i](this.windowWidth, this.windowHeight),\r\n                    TEXT_SYM_SIZE,\r\n                    text,\r\n                    TEXT_SIZE\r\n                )\r\n            );\r\n        }\r\n\r\n        const secondsSlice = [\r\n            Math.floor(this.seconds / 100) % 10,\r\n            Math.floor(this.seconds / 10) % 10,\r\n            this.seconds % 10,\r\n        ];\r\n        for (let i = 0; i < 3; i++) {\r\n            const text = TEXT_ARRAY[secondsSlice[i]];\r\n            this.drawRect(\r\n                createUiSpriteData(\r\n                    uiTextTimePosArray[i](this.windowWidth, this.windowHeight),\r\n                    TEXT_SYM_SIZE,\r\n                    text,\r\n                    TEXT_SIZE\r\n                )\r\n            );\r\n        }\r\n\r\n        let faceUvPos = uiFaceDefaultUvPos;\r\n        if (this.faceState === \"press\") {\r\n            faceUvPos = uiFacePressUvPos;\r\n        } else if (this.faceState === \"win\") {\r\n            faceUvPos = uiFaceWinUvPos;\r\n        } else if (this.faceState === \"lose\") {\r\n            faceUvPos = uiFaceLoseUvPos;\r\n        }\r\n\r\n        this.drawRect(\r\n            createUiSpriteData(uiFacePos(this.windowWidth, this.windowHeight), [FACE_SIZE, FACE_SIZE], faceUvPos, [\r\n                FACE_SIZE,\r\n                FACE_SIZE,\r\n            ])\r\n        );\r\n\r\n        if (!this.fieldCameraState.isOnTop) {\r\n            this.drawRect(uiScrollPointTop(this.windowWidth, this.windowHeight));\r\n        }\r\n        if (!this.fieldCameraState.isOnLeft) {\r\n            this.drawRect(uiScrollPointLeft(this.windowWidth, this.windowHeight));\r\n        }\r\n        if (!this.fieldCameraState.isOnRight) {\r\n            this.drawRect(uiScrollPointRight(this.windowWidth, this.windowHeight));\r\n        }\r\n        if (!this.fieldCameraState.isOnBottom) {\r\n            this.drawRect(uiScrollPointBot(this.windowWidth, this.windowHeight));\r\n        }\r\n    }\r\n}\r\n","import { Vec2 } from \"Types\";\r\n\r\nconst CELLS_TO_OPEN_RECURSIVELY_PER_FRAME = 100;\r\n\r\nconst FIELD_SIZE_COL = 0;\r\nconst FIELD_SIZE_ROW = 1;\r\n\r\nconst FIELD_STATE_OPENED = 16;\r\nconst FIELD_STATE_MARKED = 32;\r\n\r\ntype TGameLogicState = \"playing\" | \"win\" | \"gameover\";\r\n\r\nexport class GameLogic {\r\n    private fieldSize: Vec2;\r\n    private mines: number;\r\n\r\n    private field: boolean[];\r\n\r\n    private fieldState: Uint8Array;\r\n    private markedMinesCount: number;\r\n    private closedCellsCount: number;\r\n    private cellsToOpen: number;\r\n    private startTime: Date | undefined;\r\n    private endTime: Date | undefined;\r\n    private gameState: TGameLogicState;\r\n    private isFirstClick: boolean;\r\n    private recursiveOpenNodeStack: number[];\r\n\r\n    constructor(fieldSize: Vec2, mines: number) {\r\n        this.fieldSize = fieldSize;\r\n        this.mines = mines;\r\n        this.field = [];\r\n        this.fieldState = new Uint8Array();\r\n        this.markedMinesCount = 0;\r\n        this.closedCellsCount = this.getFieldSize();\r\n        this.cellsToOpen = this.closedCellsCount - this.mines;\r\n        this.isFirstClick = true;\r\n        this.gameState = \"playing\";\r\n        this.recursiveOpenNodeStack = [];\r\n    }\r\n\r\n    isCellExists(col: number, row: number) {\r\n        return col >= 0 && col < this.fieldSize[FIELD_SIZE_COL] && row >= 0 && row < this.fieldSize[FIELD_SIZE_ROW];\r\n    }\r\n\r\n    checkCellExistsError(col: number, row: number) {\r\n        if (col < 0 || col >= this.fieldSize[FIELD_SIZE_COL] || row < 0 || row >= this.fieldSize[FIELD_SIZE_ROW]) {\r\n            throw new Error(\"Cell is out of field\");\r\n        }\r\n    }\r\n\r\n    getFieldRowSize() {\r\n        return this.fieldSize[FIELD_SIZE_ROW];\r\n    }\r\n\r\n    getFieldColSize() {\r\n        return this.fieldSize[FIELD_SIZE_COL];\r\n    }\r\n\r\n    getFieldMinesCount() {\r\n        return this.mines;\r\n    }\r\n\r\n    getFieldCellId(col: number, row: number) {\r\n        this.checkCellExistsError(col, row);\r\n        return col + row * this.fieldSize[FIELD_SIZE_COL];\r\n    }\r\n\r\n    setFieldSizeAndMines(fieldSize: Vec2, mines: number) {\r\n        this.fieldSize = fieldSize;\r\n        this.mines = mines;\r\n    }\r\n\r\n    isCellHasMine(col: number, row: number): boolean {\r\n        return this.field[this.getFieldCellId(col, row)];\r\n    }\r\n\r\n    getFieldSize() {\r\n        return this.fieldSize[FIELD_SIZE_COL] * this.fieldSize[FIELD_SIZE_ROW];\r\n    }\r\n\r\n    getClosedAndNotMarkedMinesCount() {\r\n        return Math.max(0, this.mines - this.markedMinesCount);\r\n    }\r\n\r\n    getSecondsFromStart() {\r\n        const endTime = this.endTime || new Date();\r\n        return Math.floor(this.startTime ? (endTime.getTime() - this.startTime.getTime()) / 1000 : 0);\r\n    }\r\n\r\n    isCellOpened(col: number, row: number) {\r\n        return (this.fieldState[this.getFieldCellId(col, row)] & FIELD_STATE_OPENED) > 0;\r\n    }\r\n\r\n    isCellMarked(col: number, row: number) {\r\n        return (this.fieldState[this.getFieldCellId(col, row)] & FIELD_STATE_MARKED) > 0;\r\n    }\r\n\r\n    isCellClosed(col: number, row: number) {\r\n        return !this.isCellOpened(col, row);\r\n    }\r\n\r\n    getCellMinesCount(col: number, row: number) {\r\n        return this.fieldState[this.getFieldCellId(col, row)] & 15;\r\n    }\r\n\r\n    getCellMinesCountById(index: number) {\r\n        return this.fieldState[index] & 15;\r\n    }\r\n\r\n    getColAndRowFromCellId(cellId: number) {\r\n        return {\r\n            col: cellId % this.fieldSize[FIELD_SIZE_COL],\r\n            row: Math.floor(cellId / this.fieldSize[FIELD_SIZE_COL]),\r\n        };\r\n    }\r\n\r\n    generateField() {\r\n        this.field = new Array<boolean>(this.getFieldSize()).fill(false);\r\n        this.fieldState = new Uint8Array(this.getFieldSize()).fill(0);\r\n        this.markedMinesCount = 0;\r\n        this.closedCellsCount = this.getFieldSize();\r\n        this.cellsToOpen = this.closedCellsCount - this.mines;\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.gameState = \"playing\";\r\n        this.isFirstClick = true;\r\n        this.recursiveOpenNodeStack = [];\r\n\r\n        if (this.mines >= this.field.length) {\r\n            this.field = new Array<boolean>(this.field.length).fill(true);\r\n            this.fieldState = new Uint8Array(this.getFieldSize()).fill(9);\r\n            this.mines = this.field.length;\r\n            this.cellsToOpen = 0;\r\n            return;\r\n        }\r\n\r\n        let mines = this.mines;\r\n        while (mines > 0) {\r\n            const index = Math.floor(Math.random() * this.field.length);\r\n            if (!this.field[index]) {\r\n                this.field[index] = true;\r\n                mines--;\r\n                const { col, row } = this.getColAndRowFromCellId(index);\r\n                for (let i = -1; i <= 1; i++) {\r\n                    for (let j = -1; j <= 1; j++) {\r\n                        const colIndex = col + i;\r\n                        const rowIndex = row + j;\r\n                        if (this.isCellExists(colIndex, rowIndex)) {\r\n                            const cellIndex = this.getFieldCellId(colIndex, rowIndex);\r\n                            this.fieldState[cellIndex] += 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isGamePlaying() {\r\n        return this.gameState === \"playing\";\r\n    }\r\n\r\n    isGameEnded() {\r\n        return this.gameState !== \"playing\";\r\n    }\r\n\r\n    isGameOver() {\r\n        return this.gameState === \"gameover\";\r\n    }\r\n\r\n    isGameWin() {\r\n        return this.gameState === \"win\";\r\n    }\r\n\r\n    private onGameOver() {\r\n        this.gameState = \"gameover\";\r\n        this.endTime = new Date();\r\n    }\r\n\r\n    private openCellsRecursively() {\r\n        for (let k = 0; k < CELLS_TO_OPEN_RECURSIVELY_PER_FRAME; k++) {\r\n            const node = this.recursiveOpenNodeStack.shift();\r\n            if (node === undefined) {\r\n                this.recursiveOpenNodeStack = [];\r\n                break;\r\n            }\r\n\r\n            const { col, row } = this.getColAndRowFromCellId(node);\r\n            if (this.isCellOpened(col, row) || this.isCellMarked(col, row)) {\r\n                continue;\r\n            }\r\n\r\n            this.fieldState[node] |= FIELD_STATE_OPENED;\r\n            this.closedCellsCount--;\r\n\r\n            if (this.getCellMinesCountById(node) === 0) {\r\n                for (let i = -1; i <= 1; i++) {\r\n                    for (let j = -1; j <= 1; j++) {\r\n                        const colIndex = col + i;\r\n                        const rowIndex = row + j;\r\n                        if (this.isCellExists(colIndex, rowIndex)) {\r\n                            const cellIndex = this.getFieldCellId(colIndex, rowIndex);\r\n                            if (this.isCellClosed(colIndex, rowIndex)) {\r\n                                this.recursiveOpenNodeStack.push(cellIndex);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.recursiveOpenNodeStack.length === 0) {\r\n                this.recursiveOpenNodeStack = [];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    openCell(col: number, row: number) {\r\n        if (this.gameState !== \"playing\" || this.recursiveOpenNodeStack.length > 0) {\r\n            return;\r\n        }\r\n\r\n        const isFirstClick = this.isFirstClick;\r\n        this.isFirstClick = false;\r\n\r\n        if (this.startTime === undefined) {\r\n            this.startTime = new Date();\r\n        }\r\n\r\n        if (this.isCellMarked(col, row)) {\r\n            return;\r\n        }\r\n\r\n        if (this.isCellHasMine(col, row)) {\r\n            // TODO: implement on first click handle better way\r\n            if (isFirstClick) {\r\n                const index = this.getFieldCellId(col, row);\r\n                let cellForMineIndex = -1;\r\n                let iterations = 1000;\r\n                while (cellForMineIndex === -1 && iterations-- > 0) {\r\n                    const newIndex = Math.floor(Math.random() * this.field.length);\r\n                    if (!this.field[newIndex]) {\r\n                        cellForMineIndex = newIndex;\r\n                    }\r\n                }\r\n                if (cellForMineIndex === -1) {\r\n                    for (let i = 0; i < this.field.length; i++) {\r\n                        if (!this.field[i] && index !== i) {\r\n                            cellForMineIndex = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.field[index] = false;\r\n                this.field[cellForMineIndex] = true;\r\n                const { col: cellForMineCol, row: cellForMineRow } = this.getColAndRowFromCellId(cellForMineIndex);\r\n                for (let i = -1; i <= 1; i++) {\r\n                    for (let j = -1; j <= 1; j++) {\r\n                        const colIndex = col + i;\r\n                        const rowIndex = row + j;\r\n                        if (this.isCellExists(colIndex, rowIndex)) {\r\n                            const cellIndex = this.getFieldCellId(colIndex, rowIndex);\r\n                            this.fieldState[cellIndex] -= 1;\r\n                        }\r\n                        const cellForMineColIndex = cellForMineCol + i;\r\n                        const cellForMineRowIndex = cellForMineRow + j;\r\n                        if (this.isCellExists(cellForMineColIndex, cellForMineRowIndex)) {\r\n                            const cellForMineCellIndex = this.getFieldCellId(cellForMineColIndex, cellForMineRowIndex);\r\n                            this.fieldState[cellForMineCellIndex] += 1;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.fieldState[this.getFieldCellId(col, row)] |= FIELD_STATE_OPENED;\r\n                this.onGameOver();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.isCellOpened(col, row)) {\r\n            const minesAround = this.getCellMinesCount(col, row);\r\n            let hasWrongMark = false;\r\n            let markedMinesAround = 0;\r\n            let closedCellsAround = 0;\r\n            for (let i = -1; i <= 1; i++) {\r\n                for (let j = -1; j <= 1; j++) {\r\n                    const colIndex = col + i;\r\n                    const rowIndex = row + j;\r\n                    if (this.isCellExists(colIndex, rowIndex) && this.isCellMarked(colIndex, rowIndex)) {\r\n                        markedMinesAround++;\r\n                        if (!this.isCellHasMine(colIndex, rowIndex)) {\r\n                            hasWrongMark = true;\r\n                        }\r\n                    }\r\n                    if (this.isCellExists(colIndex, rowIndex) && this.isCellClosed(colIndex, rowIndex)) {\r\n                        closedCellsAround++;\r\n                    }\r\n                }\r\n            }\r\n            if (minesAround === markedMinesAround) {\r\n                if (hasWrongMark) {\r\n                    for (let i = -1; i <= 1; i++) {\r\n                        for (let j = -1; j <= 1; j++) {\r\n                            const colIndex = col + i;\r\n                            const rowIndex = row + j;\r\n                            if (this.isCellExists(colIndex, rowIndex) && !this.isCellMarked(colIndex, rowIndex)) {\r\n                                this.fieldState[this.getFieldCellId(colIndex, rowIndex)] |= FIELD_STATE_OPENED;\r\n                            }\r\n                        }\r\n                    }\r\n                    this.onGameOver();\r\n                    return;\r\n                }\r\n                this.recursiveOpenNodeStack = [];\r\n                for (let i = -1; i <= 1; i++) {\r\n                    for (let j = -1; j <= 1; j++) {\r\n                        const colIndex = col + i;\r\n                        const rowIndex = row + j;\r\n                        if (this.isCellExists(colIndex, rowIndex) && !this.isCellMarked(colIndex, rowIndex)) {\r\n                            const index = this.getFieldCellId(colIndex, rowIndex);\r\n                            this.recursiveOpenNodeStack.push(index);\r\n                        }\r\n                    }\r\n                }\r\n            } else if (minesAround === closedCellsAround) {\r\n                for (let i = -1; i <= 1; i++) {\r\n                    for (let j = -1; j <= 1; j++) {\r\n                        const colIndex = col + i;\r\n                        const rowIndex = row + j;\r\n                        if (\r\n                            this.isCellExists(colIndex, rowIndex) &&\r\n                            !this.isCellMarked(colIndex, rowIndex) &&\r\n                            this.isCellClosed(colIndex, rowIndex)\r\n                        ) {\r\n                            this.markCell(colIndex, rowIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const index = this.getFieldCellId(col, row);\r\n            this.recursiveOpenNodeStack = [index];\r\n        }\r\n    }\r\n\r\n    markCell(col: number, row: number) {\r\n        if (this.gameState !== \"playing\" || this.recursiveOpenNodeStack.length > 0) {\r\n            return;\r\n        }\r\n\r\n        this.isFirstClick = false;\r\n\r\n        const index = this.getFieldCellId(col, row);\r\n\r\n        if (this.startTime === undefined) {\r\n            this.startTime = new Date();\r\n        }\r\n\r\n        if (this.isCellOpened(col, row)) {\r\n            return;\r\n        }\r\n\r\n        if (this.isCellMarked(col, row)) {\r\n            this.fieldState[index] &= ~FIELD_STATE_MARKED;\r\n            this.markedMinesCount--;\r\n        } else {\r\n            this.fieldState[index] |= FIELD_STATE_MARKED;\r\n            this.markedMinesCount++;\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.openCellsRecursively();\r\n        if (this.getFieldSize() - this.closedCellsCount === this.cellsToOpen && this.gameState === \"playing\") {\r\n            this.gameState = \"win\";\r\n            this.endTime = new Date();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        return {\r\n            fieldSize: this.fieldSize,\r\n            mines: this.mines,\r\n            field: this.field,\r\n            fieldState: Array.from(this.fieldState),\r\n            markedMinesCount: this.markedMinesCount,\r\n            closedCellsCount: this.closedCellsCount,\r\n            cellsToOpen: this.cellsToOpen,\r\n            startTime: this.startTime,\r\n            endTime: this.endTime,\r\n            gameState: this.gameState,\r\n            isFirstClick: this.isFirstClick,\r\n            recursiveOpenNodeStack: this.recursiveOpenNodeStack,\r\n        };\r\n    }\r\n\r\n    load(data: any) {\r\n        this.fieldSize = data.fieldSize;\r\n        this.mines = data.mines;\r\n        this.field = data.field;\r\n        this.fieldState = new Uint8Array(data.fieldState);\r\n        this.markedMinesCount = data.markedMinesCount;\r\n        this.closedCellsCount = data.closedCellsCount;\r\n        this.cellsToOpen = data.cellsToOpen;\r\n        this.startTime = data.startTime;\r\n        this.endTime = data.endTime;\r\n        this.gameState = data.gameState;\r\n        this.isFirstClick = data.isFirstClick;\r\n        this.recursiveOpenNodeStack = data.recursiveOpenNodeStack;\r\n    }\r\n\r\n    consolePrint() {\r\n        const resultStrArr: string[] = [];\r\n        for (let row = 0; row < this.fieldSize[FIELD_SIZE_ROW]; row++) {\r\n            let resultStr = \"\";\r\n            for (let col = 0; col < this.fieldSize[FIELD_SIZE_COL]; col++) {\r\n                resultStr += this.isCellHasMine(col, row) ? \"@\" : \"#\";\r\n            }\r\n            resultStrArr.push(resultStr);\r\n        }\r\n        console.log(resultStrArr.reverse().join(\"\\n\"));\r\n    }\r\n}\r\n","import { BORDER_X, BORDER_Y, FIELD_CELL_SIZE, INFO_Y } from \"./Constants\";\r\n\r\nexport const calcCanvasSize = (cols: number, rows: number) => {\r\n    return {\r\n        width: Math.min(1280, cols * FIELD_CELL_SIZE + BORDER_X * 2),\r\n        height: Math.min(720, rows * FIELD_CELL_SIZE + BORDER_Y * 3 + INFO_Y),\r\n    };\r\n};\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","GameWindow","constructor","canvas","onMouseButtonDown","onMouseButtonUp","onWheel","_defineProperty","Set","addEventListener","mouseButtonsPressed","add","button","delete","mousePosition","clientX","clientY","preventDefault","stopPropagation","x","shiftKey","deltaY","deltaX","y","setOnMouseButtonDown","func","setOnMouseButtonUp","setOnWheel","isMouseButtonPressed","has","getMousePosition","getBoundingClientRect","left","bottom","isMouseInside","mousePos","width","height","FIELD_CELL_SIZE","TEXT_SIZE","BORDER_X","BORDER_Y","INFO_Y","TEXT_X","FACE_SIZE","TEXT_SYM_SIZE","TEXTURE_SIZE","startNewGame","cols","rows","mines","location","href","gWebGpuInstance","GameField","gameLogic","col","row","isPressed","isCellExists","isGameOver","isCellMarked","isCellHasMine","isCellOpened","isGameWin","isCellClosed","getCellMinesCount","baseInit","windowWidth","windowHeight","isScrollAllowed","calcCameraMaxLimits","getFieldColSize","getFieldRowSize","moveCamera","cameraPosition","maxX","maxY","Math","min","max","getHoveredCell","gameWindow","floor","getFieldCameraState","epsilon","isOnBottom","abs","isOnTop","isOnLeft","isOnRight","getMaxFieldRowAndColCount","maxDrawColCount","maxDrawRowCount","createWebGpuBufferWithData","device","inData","dataType","usage","flat","bufferDescriptor","size","byteLength","mappedAtCreation","buffer","createBuffer","getMappedRange","set","unmap","createWebGpuBufferDynamic","BYTES_PER_ELEMENT","GPUBufferUsage","COPY_DST","createOrthographicMatrix","right","top","near","far","Float32Array","createWebGpuTexture","async","filename","response","fetch","imageBitmap","createImageBitmap","blob","texture","createTexture","format","GPUTextureUsage","TEXTURE_BINDING","RENDER_ATTACHMENT","queue","copyExternalImageToTexture","source","getTheme","documentElement","getAttribute","TEXT_ARRAY","GameUi","isMouseInsideFace","faceOffsetX","faceOffsetY","checkFaceClickDown","mouseOnFaceDown","checkFaceClickUp","generateField","createUiSpriteData","spritePos","spriteSize","atlasPos","atlasSize","textBlockOffsetY","TEXT_Y","uiFrameBorderBotLeft","uiFrameBorderBotRight","uiFrameBorderTopLeft","uiFrameBorderTopRight","uiFrameBorderBot","uiFrameBorderTop","uiFrameCenter","uiFrameBorderLeft","uiFrameBorderRight","uiFrameBorderCenterLeft","uiFrameBorderCenterRight","uiFrameBorderCenter","uiFrameInfoLeft","uiFrameInfoRight","scrollPointWidthCenter","SCROLL_POINT_Y","scrollPointHeightCenter","uiScrollLeftUvPos","uiScrollRightUvPos","uiScrollTopUvPos","uiScrollBotUvPos","uiScrollXUvSize","uiScrollYUvSize","uiScrollPointLeft","uiScrollPointRight","uiScrollPointTop","uiScrollPointBot","uiFacePos","uiFaceDefaultUvPos","uiFaceWinUvPos","uiFaceLoseUvPos","uiFacePressUvPos","textOffsetY","uiTextMinesPos0","uiTextMinesPos1","uiTextMinesPos2","uiTextTimePos0","uiTextTimePos1","uiTextTimePos2","uiTextMinesPosArray","uiTextTimePosArray","getPos","position","getUV","genVBOs","sprites","positions","uvs","indices","sprite","pos","uv","gHtmlCanvasInstance","createHtmlCanvasTexture","Promise","resolve","reject","img","Image","onload","onerror","src","locals","InstanceType","init","instance","navigator","gpu","adapter","requestAdapter","requestDevice","presentationFormat","getPreferredCanvasFormat","context","getContext","canvasConfig","alphaMode","COPY_SRC","configure","console","error","getColorTextureView","getCurrentTexture","createView","getDevice","beginFrame","renderPassDesc","colorAttachments","view","clearValue","r","g","b","loadOp","storeOp","currentFrameCommandEncoder","createCommandEncoder","currentFramePassEncoder","beginRenderPass","endFrame","end","submit","finish","getPassEncoder","FieldType","arguments","positionBuffer","VERTEX","indicesBuffer","Uint32Array","INDEX","textureIdBuffer","offsetBuffer","drawIndexedIndirectParameters","drawValues","INDIRECT","writeBuffer","fieldAtlasTile","fieldAtlasTiles","vsmDesc","code","replace","vertModule","createShaderModule","fragModule","pipelineLayoutDesc","bindGroupLayouts","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","FRAGMENT","sampler","pipelineDesc","label","layout","createPipelineLayout","vertex","entryPoint","buffers","shaderLocation","offset","arrayStride","stepMode","fragment","targets","pipeline","createRenderPipeline","createSampler","magFilter","minFilter","mipmapFilter","fieldTextureDark","fieldTextureUniformBindGroupDark","createBindGroup","getBindGroupLayout","resource","fieldTextureLight","fieldTextureUniformBindGroupLight","fieldMatricesBuffer","UNIFORM","fieldMatricesUniformBindGroup","drawData","offsetBufferData","hoveredCellCol","hoveredCellRow","isLeftMouseButtonPressed","isHoveredCellOpened","textureIdBufferData","textureIdBufferColOffset","ceil","textureIdBufferRowOffset","isGamePlaying","getFieldTextureId","createTranslationMatrix","Float32ArrayConcat","draw","passEncoder","setPipeline","setViewport","setScissorRect","setBindGroup","setVertexBuffer","setIndexBuffer","drawIndexedIndirect","UiType","staticPositions","staticUVs","staticIndices","staticPositionBuffer","staticTextureCoordBuffer","staticIndicesBuffer","staticIndicesCount","dynamicPositions","dynamicUVs","dynamicIndices","dynamicPositionBuffer","dynamicTextureCoordBuffer","dynamicIndicesBuffer","dynamicIndicesCount","blend","color","srcFactor","dstFactor","alpha","uiTextureDark","uiTextureUniformBindGroupDark","uiTextureLight","uiTextureUniformBindGroupLight","uiMatricesBuffer","uiMatricesUniformBindGroup","fieldCameraState","closedMines","getClosedAndNotMarkedMinesCount","dynamicTextureCoordBufferData","minesSlice","text","seconds","getSecondsFromStart","secondsSlice","drawIndexed","clearRect","Uint8Array","textureIdArray","drawRect","textureId","drawImage","offsetX","offsetY","faceState","faceUvPos","detectColorScheme","theme","localStorage","getItem","matchMedia","matches","themeToggleSwitch","themeIcon","checked","setItem","_document$getElementB","getElementById","formData","FormData","parseInt","innerHTML","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","load","getStartupInputs","params","URLSearchParams","search","fieldSize","field","fieldState","markedMinesCount","closedCellsCount","getFieldSize","cellsToOpen","isFirstClick","gameState","recursiveOpenNodeStack","checkCellExistsError","getFieldMinesCount","getFieldCellId","setFieldSizeAndMines","endTime","Date","startTime","getTime","getCellMinesCountById","getColAndRowFromCellId","cellId","Array","fill","random","j","colIndex","rowIndex","cellIndex","isGameEnded","onGameOver","openCellsRecursively","node","shift","openCell","cellForMineIndex","iterations","newIndex","cellForMineCol","cellForMineRow","cellForMineColIndex","cellForMineRowIndex","cellForMineCellIndex","minesAround","hasWrongMark","markedMinesAround","closedCellsAround","markCell","save","from","consolePrint","resultStrArr","resultStr","log","reverse","start","canvasWidth","canvasHeight","calcCanvasSize","ui","hoveredCell","render","requestAnimationFrame","gameDataBase","onDBReady","onDBError","openRequest","indexedDB","open","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","saveGame","_this$db","tx","transaction","store","objectStore","put","loadGame","onLoadSuccess","onLoadError","_this$db2","request","_document$getElementB6","_document$getElementB7","_document$getElementB8","_document$getElementB9","history","replaceState","_document$getElementB10","_document$getElementB11","_document$getElementB12"],"sourceRoot":""}